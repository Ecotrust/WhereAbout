HOW TO PUT A NEW CLIP REGION INTO PLACE ON A PRODUCTION SERVER:

    (test this out on your dev server first)
    - create a copy of the sql file holding your clip region, call it foo.sql
    - edit that file and search/replace gwst_clip_region with foo
    - load foo into your database, cat foo.sql | psql -d or-rec-survey
    - copy the geometry from foo to gwst_region_clip table
    update gwst_region_clip set geom = a.geom from foo a where a.id=1;
    - Test the app

HOW TO ADD A SHAPEFILE TO A SPATIALITE DATABASE:

    Spatialite:
    spatialite.exe database/db.sqlite < database/data/fake-or-coast.sql

    database/data/fake-or-coast.sql:
    spatialite.exe database/db.sqlite
        --Opens spatialite command prompt with db.sqlite as the db
    .loadshp database/data/fake-or-coast foo CP1252 3310    
        # where 
            fake-or-coast is a shapefile (do NOT give filetype, such as ".shp"), 
            foo is the new table that is created, 
            cp1252 is the string type (standard Latin, a safe choice), 
            3310 is srid
            
TROUBLES:
    On importing a shapefile of point data, the columns "lat" and "long" imported only NULL for the data.
        
    SOLN 1 (EVIL WORKAROUND):
        When I tried to fix by making a CSV and editing in Excel, the geometry data was lost.
        This resulted in a table with a Geometry column, and lat (adjust for Long) values:
            Open Shapefile in QGIS
            Export a CSV
            Delete the PK_UID column, as a new PK_UID will be assigned later.
            Create new Spatialite table ("tmp_pts" below) from the CSV
            Create new Spatialite table ("acc_pts" below) from Shapefile (either .loadshp or use GUI)
            Execute SQL:
                UPDATE acc_pts
                SET Lat = ( SELECT t.Lat
                            FROM tmp_pts t
                            WHERE t.ID = acc_pts.ID
                          )
            *Using PK_UID instead of ID is bad because they will be off by 1. (One will be 0 indexed, the other: 1)
    SOLN 2 (LESS-EVIL WORKAROUND?):
        Drop the first shapefile-created table, it's broken
        Open Shapefile in QGIS
        Save the layer as a new shapefile
        Import the new shapefile as a table in Spatialite
            The Lat/Long values should now be preserved
        
        
MORE ON CLIPPING:        
        
    (continued from above)
    insert into gwst_region_clip (name, geom)
    select name, Geometry from foo;

    
=========================================================
6/16/2011
=========================================================
dropped gwst_region_clip table from cc_db.sqlite (via sqlite_gui)
spatialite.exe database/cc_db.sqlite
.loadshp database/data/clip_regions/COM_CHAR_clip_regions2 gwst_region_clip CP1252 3310
