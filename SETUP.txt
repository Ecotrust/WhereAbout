For Spatialite on Windows:
=========================
Get precompiled binaries at: http://www.gaia-gis.it/spatialite/binaries.html
		-libspatialite
		-proj (under libspatialite)
		-spatialite-tools
	Extract them somewhere and add them (individually) to your path.

Install pysqlite2 at: http://code.google.com/p/pysqlite/downloads/list

Check that local_settings.py, cdb-spatialite.bat, and ddb-spatialite.bat all reference the right database name
	and that local_settings has the correct DATABASE_ENGINE 
		(like 'django.contrib.gis.db.backends.spatialite')

provide NAME ONLY of libspatialite-1.dll in settings.py as SPATIALITE_LIBRARY_PATH
- if you provide the path, some bits of django use fine, others think it's just a filename

set DESKTOP_BUILD = True in settings.py - controls model def for clip region and local tile loading in client js

run cdb-spatialite.bat

NOTE: This assumes that init_spatialite-2.3.sql is available in the database folder.  
	If not, it can be found at: http://www.gaia-gis.it/spatialite/resources.html under 'SQL scripts'

install CherryPy
install py2exe
install simplejson (NOTE: MUST NOT be an .egg)

for python 2.5:
	get lib from: //daryl/gis/projects\SpatialWebSurveyTool\OR-Intercept-NonConSurvey\external-dependancies\lib25
		
rename media folder site-media to avoid conflict with admin media
update MEDIA_ROOT in local_settings to os.path.abspath(os.path.dirname(sys.argv[0])) + '/site-media';

recompress javascript - manage.py synccompress

setup.py py2exe

dist/run-desktop.bat to run




Debugging 
=========

OGR error on shape validate: 
likely gdal_data folder was not present in trunk when building, or GDAL_DATA environment variable issue

