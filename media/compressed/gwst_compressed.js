Ext.namespace("GeoExt");GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,initComponent:function(){if(!(this.map instanceof OpenLayers.Map)){this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true}));}
var layers=this.layers;if(!layers||layers instanceof Array){this.layers=new GeoExt.data.LayerStore({layers:layers,map:this.map});}
if(typeof this.center=="string"){this.center=OpenLayers.LonLat.fromString(this.center);}else if(this.center instanceof Array){this.center=new OpenLayers.LonLat(this.center[0],this.center[1]);}
if(typeof this.extent=="string"){this.extent=OpenLayers.Bounds.fromString(this.extent);}else if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent);}
GeoExt.MapPanel.superclass.initComponent.call(this);},updateMapSize:function(){if(this.map){this.map.updateSize();}},renderMap:function(){var map=this.map;map.render(this.body.dom);if(map.layers.length>0){if(this.center||this.zoom!=null){map.setCenter(this.center,this.zoom);}else if(this.extent){map.zoomToExtent(this.extent);}else{map.zoomToMaxExtent();}}},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(!this.ownerCt){this.renderMap();}else{this.ownerCt.on("move",this.updateMapSize,this);this.ownerCt.on({"afterlayout":{fn:this.renderMap,scope:this,single:true}});}},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize();},onBeforeAdd:function(item){if(typeof item.addToMapPanel==="function"){item.addToMapPanel(this);}
GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments);},remove:function(item,autoDestroy){if(typeof item.removeFromMapPanel==="function"){item.removeFromMapPanel(this);}
GeoExt.MapPanel.superclass.remove.apply(this,arguments);},beforeDestroy:function(){if(this.ownerCt){this.ownerCt.un("move",this.updateMapSize,this);}
if(!this.initialConfig.map||!(this.initialConfig.map instanceof OpenLayers.Map)){if(this.map&&this.map.destroy){this.map.destroy();}}
delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments);}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(o){return o instanceof GeoExt.MapPanel;});};Ext.reg('gx_mappanel',GeoExt.MapPanel);Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.prototype.clone=function(id){var layer=this.get("layer")&&this.get("layer").clone();return new this.constructor(Ext.applyIf({layer:layer},this.data),id||layer.id);};GeoExt.data.LayerRecord.create=function(o){var f=Ext.extend(GeoExt.data.LayerRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name;});GeoExt.data.LayerRecord.prototype.fields.each(function(f){p.fields.add(f);});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]));}}
f.getField=function(name){return p.fields.get(name);};return f;};Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||{});}
GeoExt.data.LayerReader.superclass.constructor.call(this,meta,recordType);};Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(layers){var records=[];if(layers){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,layer,values,field,v;for(i=0,lenI=layers.length;i<lenI;i++){layer=layers[i];values={};for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];v=layer[field.mapping||field.name]||field.defaultValue;v=field.convert(v);values[field.name]=v;}
values.layer=layer;records[records.length]=new recordType(values,layer.id);}}
return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length};}});Ext.namespace("GeoExt.data");GeoExt.data.LayerStoreMixin={map:null,reader:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.LayerReader({},config.fields);delete config.fields;var map=config.map instanceof GeoExt.MapPanel?config.map.map:config.map;delete config.map;if(config.layers){config.data=config.layers;}
delete config.layers;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);if(map){this.bind(map,options);}},bind:function(map,options){if(this.map){return;}
this.map=map;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP;}
var layers=map.layers.slice(0);if(initDir&GeoExt.data.LayerStore.STORE_TO_MAP){this.each(function(record){this.map.addLayer(record.get("layer"));},this);}
if(initDir&GeoExt.data.LayerStore.MAP_TO_STORE){this.loadData(layers,true);}
map.events.on({"changelayer":this.onChangeLayer,"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.on({"load":this.onLoad,"clear":this.onClear,"add":this.onAdd,"remove":this.onRemove,"update":this.onUpdate,scope:this});this.data.on({"replace":this.onReplace,scope:this});},unbind:function(){if(this.map){this.map.events.un({"changelayer":this.onChangeLayer,"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.data.un("replace",this.onReplace,this);this.map=null;}},onChangeLayer:function(evt){var layer=evt.layer;var recordIndex=this.findBy(function(rec,id){return rec.get("layer")===layer;});if(recordIndex>-1){var record=this.getAt(recordIndex);if(evt.property==="order"){if(!this._adding&&!this._removing){var layerIndex=this.map.getLayerIndex(layer);if(layerIndex!==recordIndex){this._removing=true;this.remove(record);delete this._removing;this._adding=true;this.insert(layerIndex,[record]);delete this._adding;}}}else if(evt.property==="name"){record.set("title",layer.name);}else{this.fireEvent("update",this,record,Ext.data.Record.EDIT);}}},onAddLayer:function(evt){if(!this._adding){var layer=evt.layer;this._adding=true;this.loadData([layer],true);delete this._adding;}},onRemoveLayer:function(evt){if(this.map.unloadDestroy){if(!this._removing){var layer=evt.layer;this._removing=true;this.remove(this.getById(layer.id));delete this._removing;}}else{this.unbind();}},onLoad:function(store,records,options){if(!Ext.isArray(records)){records=[records];}
if(options&&!options.add){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i]);}
delete this._removing;var len=records.length;if(len>0){var layers=new Array(len);for(var j=0;j<len;j++){layers[j]=records[j].get("layer");}
this._adding=true;this.map.addLayers(layers);delete this._adding;}}},onClear:function(store){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i]);}
delete this._removing;},onAdd:function(store,records,index){if(!this._adding){this._adding=true;var layer;for(var i=records.length-1;i>=0;--i){layer=records[i].get("layer");this.map.addLayer(layer);if(index!==this.map.layers.length-1){this.map.setLayerIndex(layer,index);}}
delete this._adding;}},onRemove:function(store,record,index){if(!this._removing){var layer=record.get("layer");if(this.map.getLayer(layer.id)!=null){this._removing=true;this.removeMapLayer(record);delete this._removing;}}},onUpdate:function(store,record,operation){if(operation===Ext.data.Record.EDIT){var layer=record.get("layer");var title=record.get("title");if(title!==layer.name){layer.setName(title);}}},removeMapLayer:function(record){this.map.removeLayer(record.get("layer"));},onReplace:function(key,oldRecord,newRecord){this.removeMapLayer(oldRecord);},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this);}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace('GeoExt','GeoExt.data');GeoExt.data.ProtocolProxy=function(config){Ext.apply(this,config);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments);};Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:true,response:null,load:function(params,reader,callback,scope,arg){if(this.fireEvent("beforeload",this,params)!==false){var o={params:params||{},request:{callback:callback,scope:scope,arg:arg},reader:reader};var cb=OpenLayers.Function.bind(this.loadResponse,this,o);if(this.abortPrevious){this.abortRequest();}
var options={params:params,callback:cb,scope:this};Ext.applyIf(options,arg);this.response=this.protocol.read(options);}else{callback.call(scope||this,null,arg,false);}},abortRequest:function(){if(this.response){this.protocol.abort(this.response);this.response=null;}},loadResponse:function(o,response){if(response.success()){var result=o.reader.read(response);this.fireEvent("load",this,o,o.request.arg);o.request.callback.call(o.request.scope,result,o.request.arg,true);}else{this.fireEvent("loadexception",this,o,response);o.request.callback.call(o.request.scope,null,o.request.arg,false);}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.create=function(o){var f=Ext.extend(GeoExt.data.FeatureRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name;});GeoExt.data.FeatureRecord.prototype.fields.each(function(f){p.fields.add(f);});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]));}}
f.getField=function(name){return p.fields.get(name);};return f;};Ext.namespace('GeoExt','GeoExt.data');GeoExt.data.FeatureReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.FeatureRecord.create(recordType||meta.fields||{});}
GeoExt.data.FeatureReader.superclass.constructor.call(this,meta,recordType);};Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(response){return this.readRecords(response.features);},readRecords:function(features){var records=[];if(features){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,feature,values,field,v;for(i=0,lenI=features.length;i<lenI;i++){feature=features[i];values={};if(feature.attributes){for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];if(/[\[\.]/.test(field.mapping)){try{v=new Function("obj","return obj."+field.mapping)(feature.attributes);}catch(e){v=field.defaultValue;}}
else{v=feature.attributes[field.mapping||field.name]||field.defaultValue;}
if(field.convert){v=field.convert(v);}
values[field.name]=v;}}
values.feature=feature;values.state=feature.state;values.fid=feature.fid;var id=(feature.state===OpenLayers.State.INSERT)?undefined:feature.id;records[records.length]=new recordType(values,id);}}
return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length};}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureStoreMixin={layer:null,reader:null,addFeatureFilter:null,addRecordFilter:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.FeatureReader({},config.fields);var layer=config.layer;delete config.layer;if(config.features){config.data=config.features;}
delete config.features;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);if(layer){this.bind(layer,options);}},bind:function(layer,options){if(this.layer){return;}
this.layer=layer;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.FeatureStore.LAYER_TO_STORE|GeoExt.data.FeatureStore.STORE_TO_LAYER;}
var features=layer.features.slice(0);if(initDir&GeoExt.data.FeatureStore.STORE_TO_LAYER){var records=this.getRange();for(var i=records.length-1;i>=0;i--){this.layer.addFeatures([records[i].get("feature")]);}}
if(initDir&GeoExt.data.FeatureStore.LAYER_TO_STORE){this.loadData(features,true);}
layer.events.on({"featuresadded":this.onFeaturesAdded,"featuresremoved":this.onFeaturesRemoved,"featuremodified":this.onFeatureModified,scope:this});this.on({"load":this.onLoad,"clear":this.onClear,"add":this.onAdd,"remove":this.onRemove,"update":this.onUpdate,scope:this});},unbind:function(){if(this.layer){this.layer.events.un({"featuresadded":this.onFeaturesAdded,"featuresremoved":this.onFeaturesRemoved,"featuremodified":this.onFeatureModified,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.un("update",this.onUpdate,this);this.layer=null;}},getRecordFromFeature:function(feature){var record=null;if(feature.state!==OpenLayers.State.INSERT){record=this.getById(feature.id);}else{var index=this.findBy(function(r){return r.get("feature")===feature;});if(index>-1){record=this.getAt(index);}}
return record;},onFeaturesAdded:function(evt){if(!this._adding){var features=evt.features,toAdd=features;if(typeof this.addFeatureFilter=="function"){toAdd=[];var i,len,feature;for(var i=0,len=features.length;i<len;i++){feature=features[i];if(this.addFeatureFilter(feature)!==false){toAdd.push(feature);}}}
this._adding=true;this.loadData(toAdd,true);delete this._adding;}},onFeaturesRemoved:function(evt){if(!this._removing){var features=evt.features,feature,record,i;for(i=features.length-1;i>=0;i--){feature=features[i];record=this.getRecordFromFeature(feature);if(record!==undefined){this._removing=true;this.remove(record);delete this._removing;}}}},onFeatureModified:function(evt){if(!this._updating){var feature=evt.feature;var record=this.getRecordFromFeature(feature);if(record!==undefined){record.beginEdit();attributes=feature.attributes;if(attributes){var fields=this.recordType.prototype.fields;for(var i=0,len=fields.length;i<len;i++){var field=fields.items[i];var key=field.mapping||field.name;if(key in attributes){record.set(field.name,field.convert(attributes[key]));}}}
record.set("state",feature.state);record.set("fid",feature.fid);record.data["feature"]=feature;this._updating=true;record.endEdit();delete this._updating;}}},addFeaturesToLayer:function(records){var i,len,features,record;if(typeof this.addRecordFilter=="function"){features=[]
for(i=0,len=records.length;i<len;i++){record=records[i];if(this.addRecordFilter(record)!==false){features.push(record.get("feature"));}}}else{features=new Array((len=records.length));for(i=0;i<len;i++){features[i]=records[i].get("feature");}}
if(features.length>0){this._adding=true;this.layer.addFeatures(features);delete this._adding;}},onLoad:function(store,records,options){if(!options||options.add!==true){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;this.addFeaturesToLayer(records);}},onClear:function(store){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;},onAdd:function(store,records,index){if(!this._adding){this.addFeaturesToLayer(records);}},onRemove:function(store,record,index){if(!this._removing){var feature=record.get("feature");if(this.layer.getFeatureById(feature.id)!=null){this._removing=true;this.layer.removeFeatures([record.get("feature")]);delete this._removing;}}},onUpdate:function(store,record,operation){if(!this._updating){var defaultFields=new GeoExt.data.FeatureRecord().fields;var feature=record.get("feature");if(record.fields){var cont=this.layer.events.triggerEvent("beforefeaturemodified",{feature:feature});if(cont!==false){var attributes=feature.attributes;record.fields.each(function(field){var key=field.mapping||field.name;if(!defaultFields.containsKey(key)){attributes[key]=record.get(field.name);}});this._updating=true;this.layer.events.triggerEvent("featuremodified",{feature:feature});delete this._updating;if(this.layer.getFeatureById(feature.id)!=null){this.layer.drawFeature(feature);}}}}}};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace('GeoExt.grid');GeoExt.grid.FeatureSelectionModelMixin={autoActivateControl:true,layerFromStore:true,selectControl:null,bound:false,superclass:null,constructor:function(config){config=config||{};if(config.selectControl instanceof OpenLayers.Control.SelectFeature){if(!config.singleSelect){var ctrl=config.selectControl;config.singleSelect=!(ctrl.multiple||!!ctrl.multipleKey);}}else if(config.layer instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(config.layer,config.selectControl);delete config.layer;delete config.selectControl;}
this.superclass=arguments.callee.superclass;this.superclass.constructor.call(this,config);},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var layer=this.grid.getStore()&&this.grid.getStore().layer;if(layer&&!(this.selectControl instanceof OpenLayers.Control.SelectFeature)){this.selectControl=this.createSelectControl(layer,this.selectControl);}}
if(this.selectControl){this.bind(this.selectControl);}},createSelectControl:function(layer,config){config=config||{};var singleSelect=config.singleSelect!==undefined?config.singleSelect:this.singleSelect;config=OpenLayers.Util.extend({toggle:true,multipleKey:singleSelect?null:(Ext.isMac?"metaKey":"ctrlKey")},config);var selectControl=new OpenLayers.Control.SelectFeature(layer,config);layer.map.addControl(selectControl);return selectControl;},bind:function(obj,options){if(!this.bound){options=options||{};this.selectControl=obj;if(obj instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(obj,options.controlConfig);}
if(this.autoActivateControl){this.selectControl.activate();}
var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});}
this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=true;}
return this.selectControl;},unbind:function(){var selectControl=this.selectControl;if(this.bound){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});}
this.un("rowselect",this.rowSelected,this);this.un("rowdeselect",this.rowDeselected,this);if(this.autoActivateControl){selectControl.deactivate();}
this.selectControl=null;this.bound=false;}
return selectControl;},featureSelected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.data.feature==evt.feature;});if(row!=-1&&!this.isSelected(row)){this._selecting=true;this.selectRow(row,!this.singleSelect);this._selecting=false;this.grid.getView().focusRow(row);}}},featureUnselected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.data.feature==evt.feature;});if(row!=-1&&this.isSelected(row)){this._selecting=true;this.deselectRow(row);this._selecting=false;this.grid.getView().focusRow(row);}}},rowSelected:function(model,row,record){var feature=record.data.feature;if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)==-1){this._selecting=true;this.selectControl.select(feature);this._selecting=false;break;}}}},rowDeselected:function(model,row,record){var feature=record.data.feature;if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)!=-1){this._selecting=true;this.selectControl.unselect(feature);this._selecting=false;break;}}}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer];}};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,GeoExt.grid.FeatureSelectionModelMixin);Ext.ux.Multiselect=Ext.extend(Ext.form.Field,{appendOnly:false,dataFields:[],data:[],width:100,height:100,displayField:0,valueField:1,allowBlank:true,minLength:0,maxLength:Number.MAX_VALUE,blankText:Ext.form.TextField.prototype.blankText,minLengthText:'Minimum {0} item(s) required',maxLengthText:'Maximum {0} item(s) allowed',delimiter:',',copy:false,allowDup:false,allowTrash:false,focusClass:undefined,sortDir:'ASC',defaultAutoCreate:{tag:"div"},initComponent:function(){Ext.ux.Multiselect.superclass.initComponent.call(this);this.addEvents({'dblclick':true,'click':true,'change':true,'drop':true});},onRender:function(ct,position){Ext.ux.Multiselect.superclass.onRender.call(this,ct,position);var cls='ux-mselect';var fs=new Ext.form.FieldSet({renderTo:this.el,title:this.legend,height:this.height,width:this.width,style:"padding:0;",tbar:this.tbar});fs.body.addClass(cls);var tpl='<tpl for="."><div class="'+cls+'-item';if(Ext.isIE||Ext.isIE7){tpl+='" unselectable=on';}else{tpl+=' x-unselectable"';}
tpl+='>{'+this.displayField+'}</div></tpl>';if(!this.store){this.store=new Ext.data.SimpleStore({fields:this.dataFields,data:this.data});}
this.view=new Ext.ux.DDView({multiSelect:true,store:this.store,selectedClass:cls+"-selected",tpl:tpl,allowDup:this.allowDup,copy:this.copy,allowTrash:this.allowTrash,dragGroup:this.dragGroup,dropGroup:this.dropGroup,itemSelector:"."+cls+"-item",isFormField:false,applyTo:fs.body,appendOnly:this.appendOnly,sortField:this.sortField,sortDir:this.sortDir});fs.add(this.view);this.view.on('click',this.onViewClick,this);this.view.on('beforeClick',this.onViewBeforeClick,this);this.view.on('dblclick',this.onViewDblClick,this);this.view.on('drop',function(ddView,n,dd,e,data){return this.fireEvent("drop",ddView,n,dd,e,data);},this);this.hiddenName=this.name;var hiddenTag={tag:"input",type:"hidden",value:"",name:this.name};if(this.isFormField){this.hiddenField=this.el.createChild(hiddenTag);}else{this.hiddenField=Ext.get(document.body).createChild(hiddenTag);}
fs.doLayout();},initValue:Ext.emptyFn,onViewClick:function(vw,index,node,e){var arrayIndex=this.preClickSelections.indexOf(index);if(arrayIndex!=-1)
{this.preClickSelections.splice(arrayIndex,1);this.view.clearSelections(true);this.view.select(this.preClickSelections);}
this.fireEvent('change',this,this.getValue(),this.hiddenField.dom.value);this.hiddenField.dom.value=this.getValue();this.fireEvent('click',this,e);this.validate();},onViewBeforeClick:function(vw,index,node,e){this.preClickSelections=this.view.getSelectedIndexes();if(this.disabled){return false;}},onViewDblClick:function(vw,index,node,e){return this.fireEvent('dblclick',vw,index,node,e);},getValue:function(valueField){var returnArray=[];var selectionsArray=this.view.getSelectedIndexes();if(selectionsArray.length==0){return'';}
for(var i=0;i<selectionsArray.length;i++){returnArray.push(this.store.getAt(selectionsArray[i]).get(((valueField!=null)?valueField:this.valueField)));}
return returnArray.join(this.delimiter);},setValue:function(values){var index;var selections=[];this.view.clearSelections();this.hiddenField.dom.value='';if(!values||(values=='')){return;}
if(!(values instanceof Array)){values=values.split(this.delimiter);}
for(var i=0;i<values.length;i++){index=this.view.store.indexOf(this.view.store.query(this.valueField,new RegExp('^'+values[i]+'$',"i")).itemAt(0));selections.push(index);}
this.view.select(selections);this.hiddenField.dom.value=this.getValue();this.validate();},reset:function(){this.setValue('');},getRawValue:function(valueField){var tmp=this.getValue(valueField);if(tmp.length){tmp=tmp.split(this.delimiter);}
else{tmp=[];}
return tmp;},setRawValue:function(values){setValue(values);},validateValue:function(value){if(value.length<1){if(this.allowBlank){this.clearInvalid();return true;}else{this.markInvalid(this.blankText);return false;}}
if(value.length<this.minLength){this.markInvalid(String.format(this.minLengthText,this.minLength));return false;}
if(value.length>this.maxLength){this.markInvalid(String.format(this.maxLengthText,this.maxLength));return false;}
return true;}});Ext.reg("multiselect",Ext.ux.Multiselect);Ext.ux.DDView=function(config){if(!config.itemSelector){var tpl=config.tpl;if(this.classRe.test(tpl)){config.tpl=tpl.replace(this.classRe,'class=$1x-combo-list-item $2$1');}
else{config.tpl=tpl.replace(this.tagRe,'$1 class="x-combo-list-item" $2');}
config.itemSelector=".x-combo-list-item";}
Ext.ux.DDView.superclass.constructor.call(this,Ext.apply(config,{border:false}));};Ext.extend(Ext.ux.DDView,Ext.DataView,{sortDir:'ASC',isFormField:true,classRe:/class=(['"])(.*)\1/,tagRe:/(<\w*)(.*?>)/,reset:Ext.emptyFn,clearInvalid:Ext.form.Field.prototype.clearInvalid,afterRender:function(){Ext.ux.DDView.superclass.afterRender.call(this);if(this.dragGroup){this.setDraggable(this.dragGroup.split(","));}
if(this.dropGroup){this.setDroppable(this.dropGroup.split(","));}
if(this.deletable){this.setDeletable();}
this.isDirtyFlag=false;this.addEvents("drop");},validate:function(){return true;},destroy:function(){this.purgeListeners();this.getEl().removeAllListeners();this.getEl().remove();if(this.dragZone){if(this.dragZone.destroy){this.dragZone.destroy();}}
if(this.dropZone){if(this.dropZone.destroy){this.dropZone.destroy();}}},getName:function(){return this.name;},setValue:function(v){if(!this.store){throw"DDView.setValue(). DDView must be constructed with a valid Store";}
var data={};data[this.store.reader.meta.root]=v?[].concat(v):[];this.store.proxy=new Ext.data.MemoryProxy(data);this.store.load();},getValue:function(){var result='(';this.store.each(function(rec){result+=rec.id+',';});return result.substr(0,result.length-1)+')';},getIds:function(){var i=0,result=new Array(this.store.getCount());this.store.each(function(rec){result[i++]=rec.id;});return result;},isDirty:function(){return this.isDirtyFlag;},getTargetFromEvent:function(e){var target=e.getTarget();while((target!==null)&&(target.parentNode!=this.el.dom)){target=target.parentNode;}
if(!target){target=this.el.dom.lastChild||this.el.dom;}
return target;},getDragData:function(e){var target=this.findItemFromChild(e.getTarget());if(target){if(!this.isSelected(target)){delete this.ignoreNextClick;this.onItemClick(target,this.indexOf(target),e);this.ignoreNextClick=true;}
var dragData={sourceView:this,viewNodes:[],records:[],copy:this.copy||(this.allowCopy&&e.ctrlKey)};if(this.getSelectionCount()==1){var i=this.getSelectedIndexes()[0];var n=this.getNode(i);dragData.viewNodes.push(dragData.ddel=n);dragData.records.push(this.store.getAt(i));dragData.repairXY=Ext.fly(n).getXY();}else{dragData.ddel=document.createElement('div');dragData.ddel.className='multi-proxy';this.collectSelection(dragData);}
return dragData;}
return false;},getRepairXY:function(e){return this.dragData.repairXY;},collectSelection:function(data){data.repairXY=Ext.fly(this.getSelectedNodes()[0]).getXY();if(this.preserveSelectionOrder===true){Ext.each(this.getSelectedIndexes(),function(i){var n=this.getNode(i);var dragNode=n.cloneNode(true);dragNode.id=Ext.id();data.ddel.appendChild(dragNode);data.records.push(this.store.getAt(i));data.viewNodes.push(n);},this);}else{var i=0;this.store.each(function(rec){if(this.isSelected(i)){var n=this.getNode(i);var dragNode=n.cloneNode(true);dragNode.id=Ext.id();data.ddel.appendChild(dragNode);data.records.push(this.store.getAt(i));data.viewNodes.push(n);}
i++;},this);}},setDraggable:function(ddGroup){if(ddGroup instanceof Array){Ext.each(ddGroup,this.setDraggable,this);return;}
if(this.dragZone){this.dragZone.addToGroup(ddGroup);}else{this.dragZone=new Ext.dd.DragZone(this.getEl(),{containerScroll:true,ddGroup:ddGroup});if(!this.multiSelect){this.singleSelect=true;}
this.dragZone.getDragData=this.getDragData.createDelegate(this);this.dragZone.getRepairXY=this.getRepairXY;this.dragZone.onEndDrag=this.onEndDrag;}},setDroppable:function(ddGroup){if(ddGroup instanceof Array){Ext.each(ddGroup,this.setDroppable,this);return;}
if(this.dropZone){this.dropZone.addToGroup(ddGroup);}else{this.dropZone=new Ext.dd.DropZone(this.getEl(),{owningView:this,containerScroll:true,ddGroup:ddGroup});this.dropZone.getTargetFromEvent=this.getTargetFromEvent.createDelegate(this);this.dropZone.onNodeEnter=this.onNodeEnter.createDelegate(this);this.dropZone.onNodeOver=this.onNodeOver.createDelegate(this);this.dropZone.onNodeOut=this.onNodeOut.createDelegate(this);this.dropZone.onNodeDrop=this.onNodeDrop.createDelegate(this);}},getDropPoint:function(e,n,dd){if(n==this.el.dom){return"above";}
var t=Ext.lib.Dom.getY(n),b=t+n.offsetHeight;var c=t+(b-t)/2;var y=Ext.lib.Event.getPageY(e);if(y<=c){return"above";}else{return"below";}},isValidDropPoint:function(pt,n,data){if(!data.viewNodes||(data.viewNodes.length!=1)){return true;}
var d=data.viewNodes[0];if(d==n){return false;}
if((pt=="below")&&(n.nextSibling==d)){return false;}
if((pt=="above")&&(n.previousSibling==d)){return false;}
return true;},onNodeEnter:function(n,dd,e,data){if(this.highlightColor&&(data.sourceView!=this)){this.el.highlight(this.highlightColor);}
return false;},onNodeOver:function(n,dd,e,data){var dragElClass=this.dropNotAllowed;var pt=this.getDropPoint(e,n,dd);if(this.isValidDropPoint(pt,n,data)){if(this.appendOnly||this.sortField){return"x-tree-drop-ok-below";}
if(pt){var targetElClass;if(pt=="above"){dragElClass=n.previousSibling?"x-tree-drop-ok-between":"x-tree-drop-ok-above";targetElClass="x-view-drag-insert-above";}else{dragElClass=n.nextSibling?"x-tree-drop-ok-between":"x-tree-drop-ok-below";targetElClass="x-view-drag-insert-below";}
if(this.lastInsertClass!=targetElClass){Ext.fly(n).replaceClass(this.lastInsertClass,targetElClass);this.lastInsertClass=targetElClass;}}}
return dragElClass;},onNodeOut:function(n,dd,e,data){this.removeDropIndicators(n);},onNodeDrop:function(n,dd,e,data){if(this.fireEvent("drop",this,n,dd,e,data)===false){return false;}
var pt=this.getDropPoint(e,n,dd);var insertAt=(this.appendOnly||(n==this.el.dom))?this.store.getCount():n.viewIndex;if(pt=="below"){insertAt++;}
if(data.sourceView==this){if(pt=="below"){if(data.viewNodes[0]==n){data.viewNodes.shift();}}else{if(data.viewNodes[data.viewNodes.length-1]==n){data.viewNodes.pop();}}
if(!data.viewNodes.length){return false;}
if(insertAt>this.store.indexOf(data.records[0])){insertAt--;}}
if(data.node instanceof Ext.tree.TreeNode){var r=data.node.getOwnerTree().recordFromNode(data.node);if(r){data.records=[r];}}
if(!data.records){alert("Programming problem. Drag data contained no Records");return false;}
for(var i=0;i<data.records.length;i++){var r=data.records[i];var dup=this.store.getById(r.id);if(dup&&(dd!=this.dragZone)){if(!this.allowDup&&!this.allowTrash){Ext.fly(this.getNode(this.store.indexOf(dup))).frame("red",1);return true}
var x=new Ext.data.Record();r.id=x.id;delete x;}
if(data.copy){this.store.insert(insertAt++,r.copy());}else{if(data.sourceView){data.sourceView.isDirtyFlag=true;data.sourceView.store.remove(r);}
if(!this.allowTrash)this.store.insert(insertAt++,r);}
if(this.sortField){this.store.sort(this.sortField,this.sortDir);}
this.isDirtyFlag=true;}
this.dragZone.cachedTarget=null;return true;},onEndDrag:function(data,e){var d=Ext.get(this.dragData.ddel);if(d&&d.hasClass("multi-proxy")){d.remove();}},removeDropIndicators:function(n){if(n){Ext.fly(n).removeClass(["x-view-drag-insert-above","x-view-drag-insert-left","x-view-drag-insert-right","x-view-drag-insert-below"]);this.lastInsertClass="_noclass";}},setDeletable:function(imageUrl){if(!this.singleSelect&&!this.multiSelect){this.singleSelect=true;}
var c=this.getContextMenu();this.contextMenu.on("itemclick",function(item){switch(item.id){case"delete":this.remove(this.getSelectedIndexes());break;}},this);this.contextMenu.add({icon:imageUrl||AU.resolveUrl("/images/delete.gif"),id:"delete",text:AU.getMessage("deleteItem")});},getContextMenu:function(){if(!this.contextMenu){this.contextMenu=new Ext.menu.Menu({id:this.id+"-contextmenu"});this.el.on("contextmenu",this.showContextMenu,this);}
return this.contextMenu;},disableContextMenu:function(){if(this.contextMenu){this.el.un("contextmenu",this.showContextMenu,this);}},showContextMenu:function(e,item){item=this.findItemFromChild(e.getTarget());if(item){e.stopEvent();this.select(this.getNode(item),this.multiSelect&&e.ctrlKey,true);this.contextMenu.showAt(e.getXY());}},remove:function(selectedIndices){selectedIndices=[].concat(selectedIndices);for(var i=0;i<selectedIndices.length;i++){var rec=this.store.getAt(selectedIndices[i]);this.store.remove(rec);}},onDblClick:function(e){var item=this.findItemFromChild(e.getTarget());if(item){if(this.fireEvent("dblclick",this,this.indexOf(item),item,e)===false){return false;}
if(this.dragGroup){var targets=Ext.dd.DragDropMgr.getRelated(this.dragZone,true);while(targets.indexOf(this.dropZone)!==-1){targets.remove(this.dropZone);}
if((targets.length==1)&&(targets[0].owningView)){this.dragZone.cachedTarget=null;var el=Ext.get(targets[0].getEl());var box=el.getBox(true);targets[0].onNodeDrop(el.dom,{target:el.dom,xy:[box.x,box.y+box.height-1]},null,this.getDragData(e));}}}},onItemClick:function(item,index,e){if(this.ignoreNextClick){delete this.ignoreNextClick;return;}
if(this.fireEvent("beforeclick",this,index,item,e)===false){return false;}
if(this.multiSelect||this.singleSelect){if(this.multiSelect&&e.shiftKey&&this.lastSelection){this.select(this.getNodes(this.indexOf(this.lastSelection),index),false);}else if(this.isSelected(item)&&e.ctrlKey){this.deselect(item);}else{this.deselect(item);this.select(item,this.multiSelect&&e.ctrlKey);this.lastSelection=item;}
e.preventDefault();}
return true;}});Ext.ns('Ext.ux.grid');if('function'!==typeof RegExp.escape){RegExp.escape=function(s){if('string'!==typeof s){return s;}
return s.replace(/([.*+?\^=!:${}()|\[\]\/\\])/g,'\\$1');};}
Ext.ux.grid.RowActions=function(config){Ext.apply(this,config);this.addEvents('beforeaction','action','beforegroupaction','groupaction');Ext.ux.grid.RowActions.superclass.constructor.call(this);};Ext.extend(Ext.ux.grid.RowActions,Ext.util.Observable,{actionEvent:'click',autoWidth:true,dataIndex:'',editable:false,header:'',isColumn:true,keepSelection:false,menuDisabled:true,sortable:false,tplGroup:'<tpl for="actions">'
+'<div class="ux-grow-action-item<tpl if="\'right\'===align"> ux-action-right</tpl> '
+'{cls}" style="{style}" qtip="{qtip}">{text}</div>'
+'</tpl>',tplRow:'<div class="ux-row-action">'
+'<tpl for="actions">'
+'<div class="ux-row-action-item {cls} <tpl if="text">'
+'ux-row-action-text</tpl>" style="{hide}{style}" qtip="{qtip}">'
+'<tpl if="text"><span qtip="{qtip}">{text}</span></tpl></div>'
+'</tpl>'
+'</div>',hideMode:'visibility',widthIntercept:4,widthSlope:21,init:function(grid){this.grid=grid;this.id=this.id||Ext.id();var lookup=grid.getColumnModel().lookup;delete(lookup[undefined]);lookup[this.id]=this;if(!this.tpl){this.tpl=this.processActions(this.actions);}
if(this.autoWidth){this.width=this.widthSlope*this.actions.length+this.widthIntercept;this.fixed=true;}
var view=grid.getView();var cfg={scope:this};cfg[this.actionEvent]=this.onClick;grid.afterRender=grid.afterRender.createSequence(function(){view.mainBody.on(cfg);grid.on('destroy',this.purgeListeners,this);},this);if(!this.renderer){this.renderer=function(value,cell,record,row,col,store){cell.css+=(cell.css?' ':'')+'ux-row-action-cell';return this.tpl.apply(this.getData(value,cell,record,row,col,store));}.createDelegate(this);}
if(view.groupTextTpl&&this.groupActions){view.interceptMouse=view.interceptMouse.createInterceptor(function(e){if(e.getTarget('.ux-grow-action-item')){return false;}});view.groupTextTpl='<div class="ux-grow-action-text">'+view.groupTextTpl+'</div>'
+this.processActions(this.groupActions,this.tplGroup).apply();}
if(true===this.keepSelection){grid.processEvent=grid.processEvent.createInterceptor(function(name,e){if('mousedown'===name){return!this.getAction(e);}},this);}},getData:function(value,cell,record,row,col,store){return record.data||{};},processActions:function(actions,template){var acts=[];Ext.each(actions,function(a,i){if(a.iconCls&&'function'===typeof(a.callback||a.cb)){this.callbacks=this.callbacks||{};this.callbacks[a.iconCls]=a.callback||a.cb;}
var o={cls:a.iconIndex?'{'+a.iconIndex+'}':(a.iconCls?a.iconCls:''),qtip:a.qtipIndex?'{'+a.qtipIndex+'}':(a.tooltip||a.qtip?a.tooltip||a.qtip:''),text:a.textIndex?'{'+a.textIndex+'}':(a.text?a.text:''),hide:a.hideIndex?'<tpl if="'+a.hideIndex+'">'
+('display'===this.hideMode?'display:none':'visibility:hidden')+';</tpl>':(a.hide?('display'===this.hideMode?'display:none':'visibility:hidden;'):''),align:a.align||'right',style:a.style?a.style:''};acts.push(o);},this);var xt=new Ext.XTemplate(template||this.tplRow);return new Ext.XTemplate(xt.apply({actions:acts}));},getAction:function(e){var action=false;var t=e.getTarget('.ux-row-action-item');if(t){action=t.className.replace(/ux-row-action-item /,'');if(action){action=action.replace(/ ux-row-action-text/,'');action=action.trim();}}
return action;},onClick:function(e,target){var view=this.grid.getView();var row=e.getTarget('.x-grid3-row');var col=view.findCellIndex(target.parentNode.parentNode);var action=this.getAction(e);if(false!==row&&false!==col&&false!==action){var record=this.grid.store.getAt(row.rowIndex);if(this.callbacks&&'function'===typeof this.callbacks[action]){this.callbacks[action](this.grid,record,action,row.rowIndex,col);}
if(true!==this.eventsSuspended&&false===this.fireEvent('beforeaction',this.grid,record,action,row.rowIndex,col)){return;}
else if(true!==this.eventsSuspended){this.fireEvent('action',this.grid,record,action,row.rowIndex,col);}}
t=e.getTarget('.ux-grow-action-item');if(t){var group=view.findGroup(target);var groupId=group?group.id.replace(/ext-gen[0-9]+-gp-/,''):null;var records;if(groupId){var re=new RegExp(RegExp.escape(groupId));records=this.grid.store.queryBy(function(r){return r._groupId.match(re);});records=records?records.items:[];}
action=t.className.replace(/ux-grow-action-item (ux-action-right )*/,'');if('function'===typeof this.callbacks[action]){this.callbacks[action](this.grid,records,action,groupId);}
if(true!==this.eventsSuspended&&false===this.fireEvent('beforegroupaction',this.grid,records,action,groupId)){return false;}
this.fireEvent('groupaction',this.grid,records,action,groupId);}}});Ext.reg('rowactions',Ext.ux.grid.RowActions);Ext.namespace('gwst');gwst.settings={adminEmail:'fish@ecotrust.org',displayProjection:new OpenLayers.Projection("EPSG:900913"),unusedProjection:new OpenLayers.Projection("EPSG:4326"),equalAreaProjection:new OpenLayers.Projection("EPSG:3310"),user:null,interview:null,group:null,region:null,survey_group_id:null,survey_group_name:null,resourceStore:null,shapeStore:null};gwst.settings.urls={user:'/user/',group_resources:'/group_resources/',shapes:'/shapes/',shape_validate:'/shape/validate/',region:'/region/',group_draw_settings:'/draw_settings/'};Ext.Ajax.timeout=120000;function capFirst(string){return string.charAt(0).toUpperCase()+string.slice(1);}
function capWords(str){words=str.split(" ");for(i=0;i<words.length;i++){testwd=words[i];firLet=testwd.substr(0,1);rest=testwd.substr(1,testwd.length-1)
words[i]=firLet.toUpperCase()+rest}
return words.join(" ");}Ext.namespace('gwst.ResDrawApp');gwst.ResDrawApp=Ext.extend(Ext.util.Observable,{constructor:function(){gwst.ResDrawApp.superclass.constructor.call(this);},init:function(){Ext.override(Ext.form.Field,{setFieldLabel:function(text){if(this.rendered){this.el.up('.x-form-item',10,true).child('.x-form-item-label').update(text);}
this.fieldLabel=text;}});this.draw_manager=new gwst.ResDrawManager();this.draw_manager.startInit();}});Ext.namespace('gwst');gwst.ResDrawManager=Ext.extend(Ext.util.Observable,{user:null,curResource:null,curSaveRecord:null,curDeleteRecord:null,curUpdateRecord:null,studyRegion:null,viewport:null,mapPanel:null,layerWin:null,layerWinOffset:[-8,8],quitWinOffset:[308,8],drawToolWinOffset:[450,8],constructor:function(){gwst.ResDrawManager.superclass.constructor.call(this);this.addEvents('settings-loaded');this.addEvents('res-shapes-loaded');this.addEvents('shape-saved');this.mapPanelListeners={'render':this.mapPanelCreated.createDelegate(this),'resize':this.mapResized.createDelegate(this)};this.wktParser=new OpenLayers.Format.WKT();},startInit:function(){this.createError();this.on('settings-loaded',this.finInit,this);this.on('shape-saved',this.startAnotherShapeStep,this);this.fetchSettings();this.loadWait('While the drawing tool loads');},finInit:function(){this.hideWait();this.loadViewport();this.startSplashStep();this.loadQuitWin();this.mapPanel.showPanZoomBar();},startSplashStep:function(){if(this.curResource){this.startUnfinishedResourceStartStep();}else{this.loadSplash();}},finSplashStep:function(){this.startResSelStep();},startUnfinishedResourceStartStep:function(){this.loadUnfinishedResourceStartPanel();},finUnfinishedResourceStartStep:function(){if(gwst.settings.shapeStore.getCount()>0){gwst.settings.shapeStore.removeListener('load',this.finUnfinishedResourceStartStep,this);this.startDraw2Step();}else{gwst.settings.shapeStore.on('load',this.finUnfinishedResourceStartStep,this);}},skipUnfinishedResourceStartStep:function(){this.loadUnfinishedCheck();this.curResource.set('started',false);},startResSelStep:function(){this.loadResSelPanel();},finResSelStep:function(obj,resource_id){this.curResource=gwst.settings.resourceStore.getById(resource_id);if(this.curResource.get('finished')==true){this.loadFinishedResourceSelectedWindow();}else{this.startNavStep();}},reopenResource:function(){this.curResource.set('finished',false);this.loadShapeStore(this.mapPanel.getShapeLayer());this.finResSelWin.hide();this.startNavStep();},backResSelStep:function(){this.loadSplash();},startNavStep:function(){this.loadNavPanel();},finNavStep:function(){if(gwst.settings.shapeStore.getCount()<=0){this.startDrawStep();}else{this.startDraw2Step();}},backNavStep:function(){if(gwst.settings.shapeStore.getCount()==0){this.loadResSelPanel();}else{this.loadUnfinishedCheck();}},startDrawStep:function(){this.loadDrawPanel();this.mapPanel.enableResDraw();},finDrawStep:function(){if(this.drawToolWin){this.drawToolWin.hide();}
this.mapPanel.disableResDraw();},backDrawStep:function(){if(this.drawToolWin){this.drawToolWin.hide();}
this.mapPanel.disableResDraw();this.loadNavPanel();},startDraw2Step:function(){if(gwst.settings.shapeStore.getCount()>0){this.loadDraw2Panel();this.mapPanel.enableResDraw();}else{this.startDrawStep();}},finDraw2Step:function(){if(this.drawToolWin){this.drawToolWin.hide();}
this.mapPanel.disableResDraw();this.startPennyInstrStep();},backDraw2Step:function(){if(this.drawToolWin){this.drawToolWin.hide();}
this.mapPanel.disableResDraw();this.startNavStep();},startInvalidShapeStep:function(status_code){this.loadInvalidShapePanel(status_code);this.mapPanel.disableResDraw();if(this.drawToolWin){this.drawToolWin.hide();}},finInvalidShapeStep:function(){if(gwst.settings.shapeStore.getCount()>0){this.startAnotherShapeStep();}else{this.startDrawStep();}},startSatisfiedShapeStep:function(shape_obj){this.addValidatedShape(shape_obj.geom);this.mapPanel.disableResDraw();this.loadSatisfiedShapePanel();if(this.drawToolWin){this.drawToolWin.hide();}},finSatisfiedShapeStep:function(result){if(!result.satisfied){this.mapPanel.removeLastShape();this.startDraw2Step();}else{this.startAttribStep();}},startAttribStep:function(){this.loadAttribPanel();},finAttribStep:function(boundary_values_obj){this.saveNewShape(boundary_values_obj);},startAnotherShapeStep:function(){this.loadAnotherShapePanel();},penniesStepSelected:function(){if(gwst.settings.shapeStore.getCount()>0){this.moveToDropPenniesStep();}else{this.startFinishStep();}},moveToDropPenniesStep:function(){this.startPennyInstrStep();},startPennyInstrStep:function(){this.loadAllocPanel();},finPennyInstrStep:function(){this.startPennyStep();},backPennyInstrStep:function(){this.startDraw2Step();},startPennyStep:function(){this.loadPennyPanel();},finPennyStep:function(){this.startFinishStep();},backPennyStep:function(){this.startPennyInstrStep();},startFinishStep:function(){this.curResource.set('finished',true);this.loadFinishPanel();},finFinishStep:function(){this.finDrawingPhase();},selNewResStep:function(){gwst.settings.shapeStore.removeAll();if(this.resSelPanel){this.resSelPanel.resetSelect();}
this.startResSelStep();if(this.unfinishedCheckWin){this.unfinishedCheckWin.hide();}},finDrawingPhase:function(){window.location="/group_status#main_menu";},loadViewport:function(){this.viewport=new gwst.widgets.MainViewport({mapPanelListeners:this.mapPanelListeners});},loadWait:function(msg){if(!this.wait_win){this.wait_win=new gwst.widgets.WaitWindow();this.wait_win.on('show',(function(){this.wait_win.center();}).createDelegate(this));}
this.wait_win.showMsg(msg);},hideWait:function(){this.wait_win.hide();},createError:function(msg){if(!gwst.error){gwst.error=new gwst.widgets.ErrorWindow();gwst.error.on('show',(function(){gwst.error.center();}).createDelegate(this));}},loadQuitWin:function(){if(!this.quitWin){this.quitWin=new gwst.widgets.QuitWindow();this.quitWin.on('quit-button',this.loadQuitCheckWin,this);}
this.quitWin.show();this.quitWin.alignTo(document.body,"tl-tl",this.quitWinOffset);},loadQuitCheckWin:function(){if(!this.quitCheckWin){this.quitCheckWin=new gwst.widgets.QuitCheckWindow();this.quitCheckWin.on('main-menu',this.finDrawingPhase,this);}
this.quitCheckWin.show();},loadSplash:function(){if(!this.splashPanel){this.splashPanel=new gwst.widgets.SplashPanel({xtype:'gwst-splash-panel',user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name,res_group_name:gwst.settings.interview.resource_name});this.splashPanel.on('splash-cont',this.finSplashStep,this);}else{this.splashPanel.updateText({user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name,res_group_name:gwst.settings.interview.resource_name});}
this.viewport.setWestPanel(this.splashPanel);},loadUnfinishedResourceStartPanel:function(){if(!this.unfinResStartPanel){this.unfinResStartPanel=new gwst.widgets.UnfinishedResourceStartPanel({xtype:'gwst-splash-panel',user_group:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,res_group_name:gwst.settings.interview.resource_name,cur_resource:this.curResource.get('name'),user_group_desc:gwst.settings.group.description});this.unfinResStartPanel.on('unfin-res-start-cont',this.finUnfinishedResourceStartStep,this);this.unfinResStartPanel.on('unfin-res-start-skip',this.skipUnfinishedResourceStartStep,this);}else{this.unfinResStartPanel.updateText({user_group:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,res_group_name:gwst.settings.interview.resource_name,cur_resource:this.curResource.get('name'),user_group_desc:gwst.settings.group.description});}
this.viewport.setWestPanel(this.unfinResStartPanel);},loadResSelPanel:function(){if(!this.resSelPanel){this.resSelPanel=new gwst.widgets.SelResPanel({xtype:'gwst-sel-res-panel',res_group_name:gwst.settings.interview.resource_name,plural_res_group_name:gwst.settings.interview.resource_name_plural,user_group:gwst.settings.group.member_title,action:gwst.settings.interview.resource_action,shape_name:gwst.settings.interview.shape_name,contact_address:gwst.settings.adminEmail});this.resSelPanel.on('res-sel-cont',this.finResSelStep,this);this.resSelPanel.on('res-sel-back',this.backResSelStep,this);}else{this.resSelPanel.updateText({res_group_name:gwst.settings.interview.resource_name,plural_res_group_name:gwst.settings.interview.resource_name_plural,user_group:gwst.settings.group.member_title,action:gwst.settings.interview.resource_action,shape_name:gwst.settings.interview.shape_name,contact_address:gwst.settings.adminEmail});}
this.viewport.setWestPanel(this.resSelPanel);},loadFinishedResourceSelectedWindow:function(){if(!this.finResSelWin){this.finResSelWin=new gwst.widgets.FinishedResourceSelectedWindow({res_group_name:gwst.settings.interview.resource_name,shape_name_plural:gwst.settings.interview.shape_name_plural,cur_resource:this.curResource.get('name'),user_group_desc:gwst.settings.group.description});this.finResSelWin.on('edit-finished',this.reopenResource,this);}else{this.finResSelWin.updateWindow({res_group_name:gwst.settings.interview.resource_name,shape_name_plural:gwst.settings.interview.shape_name_plural,cur_resource:this.curResource.get('name'),user_group_desc:gwst.settings.group.description});}
this.finResSelWin.show();},loadNavPanel:function(){if(!this.navPanel){this.navPanel=new gwst.widgets.NavigatePanel({xtype:'gwst-navigate-panel',resource:this.curResource.get('name'),user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});this.navPanel.on('nav-cont',this.finNavStep,this);this.navPanel.on('nav-back',this.backNavStep,this);}else{this.navPanel.updateText({resource:this.curResource.get('name'),user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.navPanel);},loadUnfinishedCheck:function(){if(!this.unfinishedCheckWin){this.unfinishedCheckWin=new gwst.widgets.UnfinishedCheckWindow({res_group_name:gwst.settings.interview.resource_name,shape_name_plural:gwst.settings.interview.shape_name_plural,resource_id:this.curResource.get('id'),user_group_desc:gwst.settings.group.description,cur_resource:this.curResource.get('name')});this.unfinishedCheckWin.on('unfin-okay',this.clearResourceShapes,this);}
this.unfinishedCheckWin.show();},clearResourceShapes:function(){var delete_config={group_id:gwst.settings.survey_group_id,resource_id:this.curResource.id,action:'DELETE'};this.deleteSavedShapes(delete_config);this.selNewResStep();},loadDrawPanel:function(){if(!this.drawPanel){this.drawPanel=new gwst.widgets.DrawPanel({xtype:'gwst-draw-panel',resource:this.curResource.get('name'),resource_id:this.curResource.get('id'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});this.drawPanel.on('draw-cont',this.finDrawStep,this);this.drawPanel.on('draw-back',this.backDrawStep,this);this.drawPanel.on('draw-grid',this.loadDraw2Panel,this);}else{this.drawPanel.updateText({resource:this.curResource.get('name'),resource_id:this.curResource.get('id'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.drawPanel);},loadDraw2Panel:function(){if(!this.draw2Panel){this.draw2Panel=new gwst.widgets.Draw2Panel({xtype:'gwst-draw-two-panel',resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});this.draw2Panel.on('draw-two-cont',this.finDraw2Step,this);this.draw2Panel.on('draw-two-back',this.backDraw2Step,this);this.draw2Panel.on('draw-two-delete',this.deleteShapeHandler,this);this.draw2Panel.on('draw-two-zoom-shape',this.zoomMapToShape,this);this.draw2Panel.on('draw-two-zoom-all',this.zoomToAllShapes,this);}else{this.draw2Panel.updateText({resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.draw2Panel);this.draw2Panel.updateGrid();},loadDrawToolWin:function(){if(!this.drawToolWin){this.drawToolWin=new gwst.widgets.DrawToolWindow();this.drawToolWin.on('cancel-res-shape',this.mapPanel.cancelResShape,this.mapPanel);}
this.drawToolWin.show();this.drawToolWin.alignTo(document.body,"tl-tl",this.drawToolWinOffset);},loadInvalidShapePanel:function(status_code){if(!this.invalidShapePanel){this.invalidShapePanel=new gwst.widgets.InvalidShapePanel({xtype:'gwst-invalid-shape-panel',status_code:status_code,resource:this.curResource.get('name'),member_title:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});this.invalidShapePanel.on('okay-btn',this.finInvalidShapeStep,this);}else{this.invalidShapePanel.updateText({status_code:status_code,resource:this.curResource.get('name'),member_title:gwst.settings.group.member_title,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.invalidShapePanel);},loadSatisfiedShapePanel:function(){if(!this.satisfiedShapePanel){this.satisfiedShapePanel=new gwst.widgets.SatisfiedShapePanel({xtype:'gwst-satisfied-panel',resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});this.satisfiedShapePanel.on('satisfied',this.finSatisfiedShapeStep,this);}else{this.satisfiedShapePanel.updateText({resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.satisfiedShapePanel);},loadAttribPanel:function(){if(!this.shapeAttribPanel){this.shapeAttribPanel=new gwst.widgets.ShapeAttribPanel({xtype:'gwst-shape-attrib-panel',shape_name:gwst.settings.interview.shape_name});this.shapeAttribPanel.on('shape-attrib-cont',this.finAttribStep,this);}else{this.shapeAttribPanel.updateText({shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.shapeAttribPanel);},loadAnotherShapePanel:function(){if(!this.drawOrDropPanel){this.drawOrDropPanel=new gwst.widgets.DrawOrDropPanel({xtype:'gwst-draw-or-drop-panel',resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,res_group_name:gwst.settings.interview.resource_name,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});this.drawOrDropPanel.on('drop-pennies',this.penniesStepSelected,this);this.drawOrDropPanel.on('draw-another',this.startDraw2Step,this);}else{this.drawOrDropPanel.updateText({resource:this.curResource.get('name'),action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,res_group_name:gwst.settings.interview.resource_name,shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.drawOrDropPanel);},loadAllocPanel:function(){if(!this.allocPanel){this.allocPanel=new gwst.widgets.AllocPanel({xtype:'gwst-alloc-panel',resource:this.curResource.get('name'),shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});this.allocPanel.on('alloc-cont',this.finPennyInstrStep,this);this.allocPanel.on('alloc-back',this.backPennyInstrStep,this);}else{this.allocPanel.updateText({resource:this.curResource.get('name'),shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.allocPanel);this.zoomToAllShapes();},loadPennyPanel:function(){if(!this.pennyPanel){this.pennyPanel=new gwst.widgets.PennyPanel({xtype:'gwst-penny-panel',resource:this.curResource.get('name'),shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});this.pennyPanel.on('penny-cont',this.finPennyStep,this);this.pennyPanel.on('penny-back',this.backPennyStep,this);this.pennyPanel.on('penny-zoom-shape',this.zoomMapToShape,this);this.pennyPanel.on('penny-zoom-all',this.zoomToAllShapes,this);}else{this.pennyPanel.updateText({resource:this.curResource.get('name'),shape_name_plural:gwst.settings.interview.shape_name_plural,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.pennyPanel);},loadFinishPanel:function(){if(!this.finishPanel){this.finishPanel=new gwst.widgets.FinishPanel({xtype:'gwst-finish-panel',res_group_name:gwst.settings.interview.resource_name,action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});this.finishPanel.on('finish-map',this.finFinishStep,this);this.finishPanel.on('select-another',this.selNewResStep,this);}else{this.finishPanel.updateText({res_group_name:gwst.settings.interview.resource_name,action:gwst.settings.interview.resource_action,user_group:gwst.settings.group.member_title,shape_name:gwst.settings.interview.shape_name});}
this.viewport.setWestPanel(this.finishPanel);},mapPanelCreated:function(){this.mapPanel=Ext.getCmp('mappanel');this.loadShapeStore(this.mapPanel.getShapeLayer());gwst.settings.layerStore=this.mapPanel.getLayerStore();this.mapPanel.on('res-shape-started',this.resShapeStarted,this);this.mapPanel.on('res-shape-complete',this.resShapeComplete,this);},mapResized:function(){if(this.layerWin){this.layerWin.alignTo(document.body,"tr-tr",this.layerWinOffset);}},zoomMapToShape:function(record){this.mapPanel.zoomToResShape(record.get('feature'));},zoomToAllShapes:function(record){this.mapPanel.zoomToAllShapes();},resShapeStarted:function(){this.loadDrawToolWin();},resShapeComplete:function(feature){this.validateShape({geometry:feature.geometry,resource:gwst.settings.survey_group_id+'-'+this.curResource.id});},deleteShapeHandler:function(record){this.deleteSavedShape(record);},trackNewShape:function(store,records,index){if(records.length==1){this.curSaveRecord=records[0];}else{console.error('More than one record added!');}},mapLayerToggled:function(sm,rowIndex,record){var lyr=record.get('layer');if(lyr.getVisibility()==false){lyr.setVisibility(true);}else{lyr.setVisibility(false);}},fetchSettings:function(){Ext.Ajax.request({url:gwst.settings.urls.group_draw_settings+gwst.settings.survey_group_id+'/json',disableCachingParam:true,scope:this,success:this.finFetchSettings,failure:function(response,opts){alert('Res group request failed: '+response.status);}});},finFetchSettings:function(response,opts){var settings_obj=Ext.decode(response.responseText);Ext.apply(gwst.settings,settings_obj);this.loadResourceStore(gwst.settings.group.sel_resources);this.loadUnfinishedResource();this.fireEvent('settings-loaded');},loadUnfinishedResource:function(){gwst.settings.resourceStore.each(function(r){if(r.get('started')&&!r.get('finished')){this.curResource=r;return false;}},this);return;},validateShape:function(config){this.loadWait('Validating your '+gwst.settings.interview.shape_name);Ext.Ajax.request({url:gwst.settings.urls.shape_validate,method:'POST',disableCachingParam:true,params:{geometry:config.geometry.toString(),resource:config.resource,orig_shape_id:config.orig_shape_id},success:this.finValidateShape,failure:function(response,opts){this.hideWait();gwst.error.load('An unknown error has occurred while trying to validate your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');},scope:this});},finValidateShape:function(response,opts){this.hideWait();var clip_obj=Ext.decode(response.responseText);var status_code=parseFloat(clip_obj.status_code);if(status_code==0||status_code==1){this.startSatisfiedShapeStep(clip_obj);}else if(status_code>1){this.startInvalidShapeStep(status_code);}else{gwst.error.load('An unknown error has occurred while trying to validate your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');}},saveNewShape:function(boundary_values_obj){this.loadWait('Saving');var data={geometry:this.curSaveRecord.get('feature').geometry.toString(),pennies:this.curSaveRecord.get('pennies'),group_id:gwst.settings.survey_group_id,resource_id:this.curResource.id};Ext.apply(data,boundary_values_obj);Ext.Ajax.request({url:gwst.settings.urls.shapes,method:'POST',disableCachingParam:true,params:{feature:Ext.util.JSON.encode(data)},success:this.finSaveNewShape,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An unknown error has occurred while trying to save your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');},scope:this});},finSaveNewShape:function(response){var new_feat=Ext.decode(response.responseText);this.curSaveRecord.set('id',new_feat.feature.id);this.hideWait.defer(500,this);this.fireEvent('shape-saved');gwst.settings.shapeStore.commitChanges();},deleteSavedShape:function(record){this.loadWait('Removing your '+this.curResource.get('name')+' '+gwst.settings.interview.shape_name);this.curDeleteRecord=record;Ext.Ajax.request({url:gwst.settings.urls.shapes+record.get('id'),method:'POST',disableCachingParam:true,params:{action:'DELETE'},success:this.finDeleteSavedShape,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An unknown error has occurred while trying to delete your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');},scope:this});},finDeleteSavedShape:function(response){this.hideWait.defer(500,this);if(!this.curDeleteRecord){console.error('No record to delete!');}
gwst.settings.shapeStore.remove(this.curDeleteRecord);this.curDeleteRecord=null;if(this.draw2Panel){this.draw2Panel.refresh();}
if(this.pennyPanel){this.pennyPanel.refresh();}},deleteSavedShapes:function(delete_config){this.loadWait('Deleting');Ext.Ajax.request({url:gwst.settings.urls.shapes,method:'POST',disableCachingParam:true,params:delete_config,success:this.finDeleteSavedShapes,failure:function(id_obj,opts){this.hideWait.defer(500,this);gwst.error.load('An unknown error has occurred while trying to delete your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');},scope:this});},finDeleteSavedShapes:function(id_obj){this.hideWait.defer(500,this);},updateSavedShape:function(store,record,operation){if(record.modified==null||record.modified.pennies=='undefined'||record.modified.pennies==null){return;}
var data={pennies:parseInt(record.get('pennies')),group_id:gwst.settings.survey_group_id,resource_id:this.curResource.id};this.loadWait('Updating');this.curUpdateRecord=record;Ext.Ajax.request({url:gwst.settings.urls.shapes+record.get('id'),method:'POST',disableCachingParam:true,params:{feature:Ext.util.JSON.encode(data)},success:this.finUpdateSavedShape,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An unknown error has occurred while trying to update your '+gwst.settings.interview.shape_name+'.  Please try again and notify us if this keeps happening.');},scope:this});},finUpdateSavedShape:function(response){this.hideWait.defer(500,this);this.curUpdateRecord=null;gwst.settings.shapeStore.commitChanges();},loadResourceStore:function(resources){this.ResourceRecord=Ext.data.Record.create([{name:'id'},{name:'name'},{name:'started',type:'boolean'},{name:'finished',type:'boolean'}]);var reader=new Ext.data.JsonReader({id:'id'},this.ResourceRecord);gwst.settings.resourceStore=new Ext.data.Store({reader:reader});gwst.settings.resourceStore.loadData(resources);},_getResourceUrl:function(){var service_url=gwst.settings.urls.shapes+'?group_id='+gwst.settings.survey_group_id;if(this.curResource&&this.curResource.id){service_url+='&resource_id='+this.curResource.id;}
return service_url;},_createResourceProxy:function(){var prxy=new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:this._getResourceUrl(),format:new OpenLayers.Format.GeoJSON()})})
return prxy;},loadShapeStore:function(shapeLayer){if(!gwst.settings.shapeStore){var autoLoad=false;if(this.curResource&&this.curResource.id){autoLoad=true;}
gwst.settings.shapeStore=new gwst.data.ResFeatureStore({layer:shapeLayer,proxy:this._createResourceProxy(),fields:[{name:'id',type:'string',defaultValue:''},{name:'pennies',type:'int',defaultValue:0},{name:'boundary_n',type:'string',defaultValue:''},{name:'boundary_s',type:'string',defaultValue:''},{name:'boundary_e',type:'string',defaultValue:''},{name:'boundary_w',type:'string',defaultValue:''}],autoLoad:autoLoad});if(autoLoad){gwst.settings.shapeStore.on('load',this.afterShapesLoaded,this);gwst.settings.shapeStore.on('load',this.configShapeStore,this);}else{this.configShapeStore();}}else{gwst.settings.shapeStore.on('load',this.afterShapesLoaded,this);gwst.settings.shapeStore.proxy=this._createResourceProxy();gwst.settings.shapeStore.reload();}},afterShapesLoaded:function(){this.zoomToAllShapes();gwst.settings.shapeStore.removeListener('load',this.afterShapesLoaded,this);},configShapeStore:function(){gwst.settings.shapeStore.removeListener('load',this.configShapeStore,this);gwst.settings.shapeStore.on('add',this.trackNewShape,this);gwst.settings.shapeStore.on('update',this.updateSavedShape,this);},addValidatedShape:function(wkt){var vec=this.wktParser.read(wkt);this.mapPanel.addShape(vec);}});Ext.namespace('gwst','gwst.data');gwst.data.ResFeatureStore=Ext.extend(GeoExt.data.FeatureStore,{initComponent:function(){Ext.apply(this,{});gwst.data.ResFeatureStore.superclass.initComponent.apply(this,arguments);},getPennyCount:function(){this.pennyCount=0;this.each(function(r){this.pennyCount=this.pennyCount+parseInt(r.get('pennies'));},this);return this.pennyCount;}});Ext.reg('gwst-res-feature-store',gwst.data.ResFeatureStore);Ext.namespace('gwst','gwst.widgets');gwst.widgets.MainViewport=Ext.extend(Ext.Viewport,{id:'main-viewport',curWestPanel:null,initComponent:function(){Ext.apply(this,{layout:"border",items:[{region:"center",id:"mappanel",border:false,xtype:"gwst-res-draw-map-panel",split:true,listeners:this.mapPanelListeners},{region:'west',width:300,id:'west-panel-container',collapsed:false,layout:'fit',autoScroll:true,border:false,style:'border-right: 1px solid #888888;'}]});gwst.widgets.MainViewport.superclass.initComponent.apply(this,arguments);},onRender:function(){gwst.widgets.MainViewport.superclass.onRender.apply(this,arguments);},setWestPanel:function(panel){var westPanelContainer=Ext.getCmp('west-panel-container');if(this.curWestPanel){this.curWestPanel.hide();}
if(!panel.loaded){westPanelContainer.add(panel);panel.loaded=true;}
this.curWestPanel=panel;this.curWestPanel.show();westPanelContainer.doLayout();westPanelContainer.body.scroll('top');}});Ext.reg('gwst-main-viewport',gwst.widgets.MainViewport);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ResDrawMapPanel=Ext.extend(GeoExt.MapPanel,{defaultZoom:7,maxZoom:12,minZoom:6,autoZoom:false,initComponent:function(){this.addEvents('res-shape-started');this.addEvents('res-shape-complete');var region=gwst.settings.region;var map_extent=new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508.34);var region_extent=new OpenLayers.Bounds(region.w_bound,region.s_bound,region.e_bound,region.n_bound)
var map_options={controls:[],projection:new OpenLayers.Projection("EPSG:900913"),displayProjection:new OpenLayers.Projection("EPSG:4326"),units:"m",numZoomLevels:18,maxResolution:156543.0339,maxExtent:map_extent,eventListeners:{"zoomend":this.zoomHandler,scope:this}};var styleMap=new OpenLayers.StyleMap({'default':new OpenLayers.Style({fillColor:'#ff8c00',fillOpacity:0.4,strokeColor:'#ff8c00',strokeOpacity:1,strokeWidth:1,cursor:'pointer',pointerEvents:"visiblePainted",label:"${pennies}",fontColor:"black",fontSize:"12px",labelAlign:"cm"}),'select':new OpenLayers.Style({strokeWidth:3,fillColor:'#ff8c00',strokeColor:'yellow',strokeOpacity:1,fillOpacity:0.4,cursor:'default',pointerEvents:"visiblePainted",label:"${pennies}",fontColor:"black",fontSize:"12px",labelAlign:"cm"}),'temporary':new OpenLayers.Style({fillColor:'#ff8c00',fillOpacity:0.4,strokeWidth:2,strokeColor:'#ff8c00',strokeOpacity:1})});var baseLayer=new OpenLayers.Layer.TMS("Oregon Nautical Charts",["/tiles/OregonCharts/"],{buffer:1,'isBaseLayer':true,visibility:false,'sphericalMercator':true,getURL:function(bounds){var z=map.getZoom();var url=this.url;var path='blank.png';if(z<=12&&z>=6){var res=map.getResolution();var x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w));var y=Math.round((this.maxExtent.top-bounds.top)/(res*this.tileSize.h));var limit=Math.pow(2,z);var path=z+"/"+x+"/"+y+".png";}
tilepath=url+path;return url+path;}});this.vecLayer=new OpenLayers.Layer.Vector('Fishing Grounds',{styleMap:styleMap});this.vecLayer.events.on({"sketchstarted":this.resShapeStarted,"sketchcomplete":this.resShapeComplete,scope:this});Ext.DomHelper.append(document.body,[{id:'ol-map'}]);map=new OpenLayers.Map('ol-map',map_options);map.addControl(new OpenLayers.Control.Navigation());map.addControl(new OpenLayers.Control.PanZoomBar());map.addControl(new OpenLayers.Control.MousePosition());map.addControl(new OpenLayers.Control.KeyboardDefaults());this.drawResControl=new OpenLayers.Control.DrawFeature(this.vecLayer,OpenLayers.Handler.Polygon);map.addControl(this.drawResControl);this.selectControl=new OpenLayers.Control.SelectFeature(this.vecLayer);map.addControl(this.selectControl);this.selectControl.activate();map.addLayers([baseLayer,this.vecLayer]);var layerStore=new GeoExt.data.LayerStore({layers:[baseLayer],map:this.map});Ext.apply(this,{map:map,layers:layerStore,extent:map_extent,center:region_extent.getCenterLonLat(),zoom:this.defaultZoom});gwst.widgets.ResDrawMapPanel.superclass.initComponent.call(this);},zoomHandler:function(){var zoomLvl=this.map.getZoom();if(zoomLvl>this.maxZoom){if(!this.autoZoom){gwst.error.load('You are already at the maximum zoom level available.');}
this.map.zoomTo(this.maxZoom);}else if(zoomLvl<this.minZoom){if(!this.autoZoom){gwst.error.load('You are already at the minimum zoom level available.');}
this.map.zoomTo(this.minZoom);}
this.autoZoom=false;},getLayerStore:function(){return this.layers;},hidePanZoomBar:function(){Ext.query(".olControlPanZoomBar")[0].style.display='none';},showPanZoomBar:function(){Ext.query(".olControlPanZoomBar")[0].style.display='none';Ext.query(".olControlPanZoomBar")[0].style.display='block';Ext.query(".olControlPanZoomBar")[0].style.left='';},zoomToMapRegion:function(region){this.autoZoom=true
this.mapRegion=region;this.mapRegion.bounds=new OpenLayers.Bounds(region.w_bound,region.s_bound,region.e_bound,region.n_bound);this.map.zoomToExtent(this.mapRegion.bounds);},zoomToResShape:function(feature){this.autoZoom=true
this.map.zoomToExtent(feature.geometry.bounds);this.selectControl.unselectAll();this.selectControl.select(feature);},zoomToAllShapes:function(){this.autoZoom=true
this.map.zoomToExtent(this.vecLayer.getDataExtent());},getShapeLayer:function(){this.autoZoom=true
return this.vecLayer;},enableResDraw:function(){this.drawResControl.activate();this.selectControl.unselectAll();},disableResDraw:function(){this.drawResControl.deactivate();},resShapeStarted:function(evt){this.fireEvent('res-shape-started');},resShapeComplete:function(evt){this.fireEvent('res-shape-complete',evt.feature);return false;},removeLastShape:function(){this.vecLayer.removeFeatures([this.curShape]);},cancelResShape:function(){this.disableResDraw();this.enableResDraw();},redoResShape:function(){this.disableResDraw();this.enableResDraw();},addShape:function(vec){Ext.apply(vec.attributes,{'pennies':0});this.vecLayer.addFeatures([vec]);this.selectControl.select(vec);this.curShape=vec;}});Ext.reg('gwst-res-draw-map-panel',gwst.widgets.ResDrawMapPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.WestPanel=Ext.extend(Ext.Panel,{cls:'west-panel',initComponent:function(){Ext.apply(this,{autoScroll:true,border:false});gwst.widgets.WestPanel.superclass.initComponent.call(this);}});Ext.reg('gwst-west-panel',gwst.widgets.WestPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.WaitWindow=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{title:'Please Wait',layout:'fit',width:250,html:{tag:'div',id:'msg_panel',html:'Crock'},height:75,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:false,modal:true});gwst.widgets.WaitWindow.superclass.initComponent.call(this);},showMsg:function(msg){this.show();Ext.get('msg_panel').update(msg);}});Ext.reg('gwst-wait-window',gwst.widgets.WaitWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.AllocPanel=Ext.extend(gwst.widgets.WestPanel,{id:'alloc-panel',resource:'unknown',shape_name:'unknown',shape_name_plural:'unknown',initComponent:function(){this.addEvents('alloc-cont');this.addEvents('alloc-back');gwst.widgets.AllocPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2> <p>Now imagine you have <b>100 pennies</b>. You\'re going to allocate those pennies over the <i>'+this.resource+'</i> '+this.shape_name_plural+' you just drew. The more pennies you place on a '+this.shape_name+', the more value or importance it has to you.</p> <p>Look over your '+this.resource+' '+this.shape_name_plural+' on the map and think about which are the most important to you. Those are the ones on which you will allocate the most pennies.</p> <p>Click the \'Continue\' button to begin allocating pennies.</p> <img src="/site-media/images/penny_overview.gif" style="margin-left: 40px">';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/4a_PennyInstructions_header.png">',id:'alloc_header_panel',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'alloc_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this),back_handler:this.backBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.AllocPanel.superclass.onRender.apply(this,arguments);},backBtnClicked:function(){this.fireEvent('alloc-back',this);},contBtnClicked:function(){this.fireEvent('alloc-cont',this);}});Ext.reg('gwst-alloc-panel',gwst.widgets.AllocPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.PennyPanel=Ext.extend(gwst.widgets.WestPanel,{id:'penny-panel',resource:'unknown',cur_num:'unknown',total_num:'unknown',pennies_remaining:'unknown',shape_name:'unknown',record:null,penniesLeft:null,shape_name_plural:'unknown',help_url:gwst.settings.urls.penny_help,initComponent:function(){this.addEvents('penny-cont');this.addEvents('penny-back');this.addEvents('penny-zoom-shape');this.addEvents('penny-zoom-all');gwst.widgets.PennyPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2><p>a. Click \'Edit Pennies\' below and give each of your '+this.shape_name_plural+' a penny value.  You must use all 100 pennies.</p> <p>b. Click \'Go Back\' if you need to change your '+this.shape_name_plural+'.</p> <p>c. Click \'Continue\' after you have allocated 100 pennies.</p>';return html_text;},gridActionClicked:function(grid,record,action,row,col){if(action=='pennies-edit'){this.record=record;if(!this.pennyWin){this.pennyWin=new gwst.widgets.PennyWindow({prev_pennies:parseInt(record.get('pennies')),rem_pennies:this.getPenniesRemaining(),shape_name:this.shape_name});this.pennyWin.on('penny-set',this.pennySet,this);}else{this.pennyWin.load({prev_pennies:parseInt(record.get('pennies')),rem_pennies:this.getPenniesRemaining(),shape_name:this.shape_name});}
this.pennyWin.show();}else if(action=='pennies-zoom'){this.fireEvent('penny-zoom-shape',record);}},pennySet:function(pennies_value){this.record.set('pennies',pennies_value);},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/4b_PennyAllocation_header.png">',id:'penny_header_panel',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'penny_inner_panel',style:'margin: 10px',border:false});this.grid_actions=new Ext.ux.grid.RowActions({header:'',autoWidth:false,width:160,sortable:false,keepSelection:true,actions:[{iconCls:'pennies-edit',text:'Edit Pennies'},{iconCls:'pennies-zoom',text:'Zoom To'}]});this.grid_actions.on({action:this.gridActionClicked.createDelegate(this)});this.penny_inner_grid_panel=new Ext.grid.GridPanel({store:gwst.settings.shapeStore,columns:[{width:30,sortable:false,renderer:function(){return'<img src="/site-media/images/control_play.png"/>';}},new Ext.grid.RowNumberer(),{header:'Pennies',width:50,sortable:false,dataIndex:'pennies',align:'center'},this.grid_actions],plugins:this.grid_actions,sm:new GeoExt.grid.FeatureSelectionModel(),stripeRows:true,height:200,width:275,title:'Your '+this.resource+' '+capWords(this.shape_name)+'s',style:'margin: 10px;',stateful:true,enableColumnResize:false,enableColumnHide:false,stateId:'grid',bbar:[{xtype:'tbfill'},{text:'Show All',iconCls:'shape-zoom-all',handler:this.zoomAllClicked,scope:this}]});this.penny_inner_grid_panel.getColumnModel().setHidden(2,false);gwst.settings.shapeStore.on('update',this.updateStatus,this);gwst.settings.shapeStore.on('remove',this.updateStatus,this);this.status_panel=new Ext.Panel({id:'penny-status-panel',layout:'table',border:false,style:'margin: 5px; margin-left: 10px',defaults:{bodyStyle:'border: none;'},layoutConfig:{columns:2},items:[{html:'<p class="x-panel-static">Remaining:&nbsp;</p>'},{html:'<img src="/site-media/images/coins.png"/> <span id="pen-rem">'+this.getPenniesRemaining()+'</span>'},{html:'Status:'},{html:'<span id="pen-status">'+this.getStatusMsg()+'</span>'}]});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this),cont_enabled:this.isComplete(),back_handler:this.backBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.penny_inner_grid_panel);this.add(this.status_panel);this.add(this.button_panel);gwst.widgets.PennyPanel.superclass.onRender.apply(this,arguments);},backBtnClicked:function(){this.fireEvent('penny-back',this);},contBtnClicked:function(){if(this.getPenniesRemaining()==0){this.fireEvent('penny-cont',this);}},zoomAllClicked:function(){this.fireEvent('penny-zoom-all');},refresh:function(){this.penny_inner_grid_panel.getView().refresh();},getPenniesRemaining:function(){return(100-gwst.settings.shapeStore.getPennyCount());},pennilessShapesExist:function(){for(var i=0;i<gwst.settings.shapeStore.getCount();i++){if(gwst.settings.shapeStore.getAt(i).get('pennies')==0){return true;}}
return false;},getStatusMsg:function(){if(this.getPenniesRemaining()>0){return'Incomplete, use all 100 pennies';}else if(this.pennilessShapesExist()){return'Incomplete, not all '+this.shape_name_plural+' have pennies allocated';}else{return'Complete, ready to move on';}},isComplete:function(){if(this.getPenniesRemaining()==0&&!(this.pennilessShapesExist())){return true;}else{return false;}},updateStatus:function(){var penniesLeft=this.getPenniesRemaining();Ext.get('pen-rem').update(penniesLeft);if(penniesLeft==0&&!(this.pennilessShapesExist())){this.button_panel.enableCont();}else{this.button_panel.disableCont();}
Ext.get('pen-status').update(this.getStatusMsg());}});Ext.reg('gwst-penny-panel',gwst.widgets.PennyPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.QuitWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('quit-button');Ext.apply(this,{height:25,width:135,layout:'fit',html:'blort',closable:false,resizable:false,tbar:[{text:'Go To Main Menu',iconCls:'quit-main',handler:this.goToMain,scope:this}]});gwst.widgets.QuitWindow.superclass.initComponent.call(this);},goToMain:function(){this.fireEvent('quit-button');}});Ext.reg('gwst-quit-window',gwst.widgets.QuitWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.BackContButtons=Ext.extend(Ext.Panel,{cont_handler:null,cont_enabled:true,back_handler:null,back_enabled:true,initComponent:function(){Ext.apply(this,{style:'margin: 0px 10px; padding: 5px 0px 5px 5px',cls:'gwst-button-panel',layout:'table',border:false,width:260,defaults:{bodyStyle:'border: none'},layoutConfig:{columns:2}});gwst.widgets.BackContButtons.superclass.initComponent.apply(this,arguments);},onRender:function(){if(this.back_handler){this.backBtn=new Ext.Button({text:'<< Go Back',handler:this.back_handler});if(!this.back_enabled){this.backBtn.disable();}
this.add({items:[this.backBtn],width:85,style:'margin-left: 40px'});}else{this.add({html:'',width:105})};if(this.cont_handler){this.contBtn=new Ext.Button({text:'Continue >>',handler:this.cont_handler});if(!this.cont_enabled){this.contBtn.disable();}
this.add({items:[this.contBtn],width:120});}
gwst.widgets.BackContButtons.superclass.onRender.apply(this,arguments);},enableCont:function(){this.contBtn.enable();},disableCont:function(){this.contBtn.disable();}});Ext.reg('gwst-back-cont-buttons-panel',gwst.widgets.BackContButtons);Ext.namespace('gwst','gwst.widgets');gwst.widgets.CustomButtons=Ext.extend(Ext.Panel,{element_list:[],initComponent:function(){Ext.apply(this,{style:'margin: 15px; padding: 5px',cls:'gwst-button-panel',layout:'table',border:false,defaults:{bodyStyle:'border: none; padding: 5px'},layoutConfig:{columns:2}});gwst.widgets.CustomButtons.superclass.initComponent.apply(this,arguments);},onRender:function(){var btn_action=null;var col_no=1;for(var i=0;i<this.element_list.length;i++){if(this.element_list[i].type=='handler'){if((this.element_list[i+2])&&(this.element_list[i+2].type=='handler')&&(col_no%2==1)){btn_action=new Ext.Action({text:this.element_list[i+1].elem,handler:this.element_list[i].elem,cls:'custom-left-button'});}else{btn_action=new Ext.Action({text:this.element_list[i+1].elem,handler:this.element_list[i].elem});}
this.add({items:[new Ext.Button(btn_action)],width:110});i++;}else if(this.element_list[i].type=='text'){this.add({html:this.element_list[i].elem})}
col_no++;};gwst.widgets.CustomButtons.superclass.onRender.apply(this,arguments);}});Ext.reg('gwst-custom-buttons-panel',gwst.widgets.CustomButtons);Ext.namespace('gwst','gwst.widgets');gwst.widgets.Draw2Panel=Ext.extend(gwst.widgets.WestPanel,{id:'draw-two-panel',resource:'unknown',user_group:'unknown',shape_name:'unknown',action:'unknown',shape_name_plural:'unknown',cur_action_record:null,help_url:gwst.settings.urls.draw_2_help,draw_help_url:gwst.settings.urls.draw_help,initComponent:function(){this.addEvents('draw-two-cont');this.addEvents('draw-two-back');this.addEvents('draw-two-instructions');this.addEvents('draw-two-zoom-shape');this.addEvents('draw-two-zoom-all');gwst.widgets.Draw2Panel.superclass.initComponent.apply(this,arguments);},updateGrid:function(){this.hidePennyColumn();},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2><p>a. <b>At this time</b>, finish drawing all of your <i>'+this.resource+'</i> '+this.shape_name_plural+' you '+this.action+' as a '+this.user_group+'.</i> Draw them the same way you drew your first.</p> <p>b. Each of the '+this.resource+' '+this.shape_name+'s you draw can be found in the table below. Click any table row to highlight, remove or zoom to that '+this.shape_name+'.</p> <p>c. Click the \'Continue\' button when you are satisfied with the '+this.shape_name+'s you\'ve drawn.</p>';return html_text;},deleteCheck:function(btn,text){if(btn=='yes'){this.fireEvent('draw-two-delete',this.cur_action_record);}},gridActionClicked:function(grid,record,action,row,col){if(action=='shape-delete'){this.cur_action_record=record;Ext.Msg.show({title:'Delete?',msg:'Do you really want to delete this '+this.shape_name+'?',buttons:Ext.Msg.YESNO,fn:this.deleteCheck.createDelegate(this),animEl:'elId',icon:Ext.MessageBox.QUESTION});}else if(action=='shape-zoom'){this.fireEvent('draw-two-zoom-shape',record);}},hidePennyColumn:function(){var pennies_exist=false;for(var i=0;i<gwst.settings.shapeStore.getCount();i++){if(gwst.settings.shapeStore.getAt(0).get('pennies')>0){pennies_exist=true;}}
this.d2_inner_grid_panel.getColumnModel().setHidden(2,!pennies_exist);if(pennies_exist){this.d2_inner_grid_panel.getColumnModel().setColumnWidth(2,50);}},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/3_2_DrawExtended_header.png">',id:'draw_extended_header_panel',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_extended_inner_panel',style:'margin: 10px',border:false});this.grid_actions=new Ext.ux.grid.RowActions({header:'',autoWidth:false,sortable:false,width:132,keepSelection:true,actions:[{iconCls:'shape-delete',text:'Remove'},{iconCls:'shape-zoom',text:'Zoom To'}]});this.grid_actions.on({action:this.gridActionClicked.createDelegate(this)});this.d2_inner_grid_panel=new Ext.grid.GridPanel({store:gwst.settings.shapeStore,columns:[{width:30,sortable:false,renderer:function(){return'<img src="/site-media/images/control_play.png"/>';}},new Ext.grid.RowNumberer(),{header:'Pennies',width:50,sortable:false,dataIndex:'pennies',align:'center'},this.grid_actions],viewConfig:{forceFit:true},plugins:this.grid_actions,sm:new GeoExt.grid.FeatureSelectionModel({singleSelect:true}),stripeRows:true,height:165,width:260,title:'Your '+this.resource+' '+capWords(this.shape_name)+'s',style:'margin: 10px',stateful:true,enableColumnResize:false,enableColumnHide:false,stateId:'grid',bbar:[{xtype:'tbfill'},{text:'Show All',iconCls:'shape-zoom-all',handler:this.zoomAllClicked,scope:this}]});this.instruction_panel=new gwst.widgets.DrawInstructionPanel({id:'draw_extended_instruction_panel',title:'How do I draw, again?',collapsible:true,collapsed:true,shape_name:this.shape_name,xtype:'gwst-draw-instruction-panel'});gwst.settings.shapeStore.on('update',this.updateStatus,this);gwst.settings.shapeStore.on('remove',this.updateStatus,this);this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this),back_handler:this.backBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.instruction_panel);this.add(this.d2_inner_grid_panel);this.hidePennyColumn();this.add(this.button_panel);gwst.widgets.Draw2Panel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('draw-two-cont');},backBtnClicked:function(){this.fireEvent('draw-two-back');},zoomAllClicked:function(){this.fireEvent('draw-two-zoom-all');},refresh:function(){this.d2_inner_grid_panel.getView().refresh();},updateStatus:function(){if(gwst.settings.shapeStore.getCount()>0){this.button_panel.enableCont();}else{this.button_panel.disableCont();}}});Ext.reg('gwst-draw-two-panel',gwst.widgets.Draw2Panel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.DrawInstructionPanel=Ext.extend(Ext.Panel,{shape_name:'unknown',initComponent:function(){Ext.apply(this,{style:'margin: 5px; padding: 3px',width:270,layout:'table',cls:'secondary-panel',border:'none',defaults:{bodyStyle:'border: none; padding: 3px 2px 3px 2px; '},layoutConfig:{columns:2},items:[{html:'<p>a. Click once on the map to create the first point.</p>'},{html:'<img src="/site-media/images/draw_1.png">'},{html:'<p>b. Move mouse and click to create a second point.</p>'},{html:'<img src="/site-media/images/draw_2.png">'},{html:'<p>c. Continue tracing being as accurate as you can.</p>'},{html:'<img src="/site-media/images/draw_3.png">'},{html:'<p>d. Double-click the last point to complete your '+this.shape_name+'.</p>'},{html:'<img src="/site-media/images/draw_4.png">'},{html:'<p>e. If you make a mistake, click the \'Cancel\' button at the top.</p>'},{html:'<img src="/site-media/images/draw_5.png">'},{html:'<p>f. You can control the map while you\'re drawing.</p>'},{html:'<img src="/site-media/images/draw_6.png">'}]});gwst.widgets.DrawInstructionPanel.superclass.initComponent.apply(this,arguments);}});Ext.reg('gwst-draw-instruction-panel',gwst.widgets.DrawInstructionPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.DrawOrDropPanel=Ext.extend(gwst.widgets.WestPanel,{id:'draw-or-drop-panel',resource:'unknown',res_group_name:'unknown',shape_name:'unknown',shape_name_plural:'unknown',initComponent:function(){this.addEvents('draw-another');this.addEvents('drop-pennies');gwst.widgets.DrawOrDropPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p class="top_instruct"><b>Would you like to draw another '+this.shape_name+', or are you done with this '+this.res_group_name+' and ready to allocate pennies?</b></p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_or_drop_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.CustomButtons({element_list:[{elem:this.drawBtnClicked.createDelegate(this),type:'handler'},{elem:'Draw Another',type:'text'},{elem:'<p>Draw another '+this.shape_name+'.</p>',type:'text'},{elem:this.addBtnClicked.createDelegate(this),type:'handler'},{elem:'Allocate Pennies',type:'text'},{elem:'<p>Add penny values to your '+this.shape_name_plural+'.</p>',type:'text'}]});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.DrawOrDropPanel.superclass.onRender.apply(this,arguments);},drawBtnClicked:function(){this.fireEvent('draw-another',this);},addBtnClicked:function(){this.fireEvent('drop-pennies',this);}});Ext.reg('gwst-draw-or-drop-panel',gwst.widgets.DrawOrDropPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SatisfiedShapePanel=Ext.extend(gwst.widgets.WestPanel,{id:'satisfied-shape-panel',resource:'unknown',shape_name:'unknown',initComponent:function(){this.addEvents('satisfied');gwst.widgets.SatisfiedShapePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p class="top_instruct"><b>Are you satisfied with this '+this.shape_name+'?</b></p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'satisfied_shape_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.YesNoButtons({yes_handler:this.yesClicked.createDelegate(this),no_handler:this.noClicked.createDelegate(this)});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.SatisfiedShapePanel.superclass.onRender.apply(this,arguments);},yesClicked:function(){this.fireEvent('satisfied',{satisfied:true});},noClicked:function(){this.fireEvent('satisfied',{satisfied:false});}});Ext.reg('gwst-satisfied-shape-panel',gwst.widgets.SatisfiedShapePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.DrawPanel=Ext.extend(gwst.widgets.WestPanel,{id:'draw-panel',resource:'unknown',user_group:'unknown',shape_name:'unknown',action:'unknown',help_url:gwst.settings.urls.draw_help,initComponent:function(){this.addEvents('draw-cont');this.addEvents('draw-back');this.addEvents('draw-grid');gwst.widgets.DrawPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2><p>Draw your <u>first</u> '+this.user_group+' <i>'+this.resource+'</i> '+this.shape_name+' on the map. (You\'ll be able to draw more)</p>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/3_DrawGrounds_header.png">',id:'draw_header_panel',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_inner_panel',style:'margin: 10px',border:false});this.table_panel=new gwst.widgets.DrawInstructionPanel({xtype:'gwst-draw-instruction-panel',shape_name:this.shape_name,id:'draw_table_panel'});this.button_panel=new gwst.widgets.BackContButtons({back_handler:this.backBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.table_panel);this.add(this.button_panel);gwst.widgets.DrawPanel.superclass.onRender.apply(this,arguments);},backBtnClicked:function(){this.fireEvent('draw-back',this);}});Ext.reg('gwst-draw-panel',gwst.widgets.DrawPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SelResPanel=Ext.extend(gwst.widgets.WestPanel,{id:'select-res-grp-panel',res_grp_select:null,user_group:'unknown',res_group_name:'unknown',plural_res_group_name:'unknown',contact_address:'unknown',action:'unknown',shape_name:'unknown',initComponent:function(){this.addEvents('res-sel-cont');this.addEvents('res-sel-back');this.res_grp_select=new gwst.widgets.SpeciesSelect({store:gwst.settings.resourceStore});gwst.widgets.SelResPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());this.finished_list_panel.getEl().update(this.getCompletedResources());this.lower_panel.getEl().update(this.getHtmlText2());},resetSelect:function(){this.res_grp_select.reset();},getHtmlText:function(){var html_text='<h2>Instructions:</h2><p>Select 1 of the '+this.plural_res_group_name+' you '+this.action+' as a <i>'+this.user_group+'</i> from the list below and then click the \'Continue\' button.</p>';return html_text;},getHtmlText2:function(){var html_text_2='<p>If you think an important '+this.res_group_name+' is missing from the list, notify us at '+this.contact_address+'.</p>';return html_text_2;},getCompletedResources:function(){var empty=true;var comp_res='<b>Complete '+capFirst(this.res_group_name)+'</b><ul>';for(var res=0;res<gwst.settings.resourceStore.getCount();res++){if(gwst.settings.resourceStore.getAt(res).get('finished')){empty=false;comp_res=comp_res+'<li>'+gwst.settings.resourceStore.getAt(res).get('name')+'</li>';}}
if(empty==true){return comp_res+'<li>None</li></ul>';}
return comp_res+'</ul>';},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/1_PickResource_header.png">',id:'sel_res_header_panel',border:false,bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'sel_res_inner_panel',style:'margin: 10px',border:false});this.lower_panel=new Ext.Panel({html:this.getHtmlText2(),id:'sel_res_lower_panel',style:'margin: 10px',border:false});this.finished_list_panel=new Ext.Panel({html:this.getCompletedResources(),id:'sel_res_fin_list_panel',style:'margin-left: 40px; margin-bottom: 10px',border:false});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this),back_handler:this.backBtnClicked.createDelegate(this)});this.content_panel=new Ext.Panel({id:'sel-rec-content-panel',items:[this.inner_panel,this.res_grp_select,this.finished_list_panel,this.button_panel,this.lower_panel],autoScroll:true,border:false});this.add(this.header_panel);this.add(this.content_panel);gwst.widgets.SelResPanel.superclass.onRender.apply(this,arguments);},backBtnClicked:function(){this.fireEvent('res-sel-back',this);},contBtnClicked:function(){var species_id=this.res_grp_select.getValue();if(species_id==''){gwst.error.load('You must select a '+this.res_group_name+' before continuing.');}else if(species_id.contains(',')){gwst.error.load('You have more than one '+this.res_group_name+' selected.  Please just select one at a time.');}else{this.fireEvent('res-sel-cont',this,species_id);}}});Ext.reg('gwst-sel-res-panel',gwst.widgets.SelResPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.DrawToolWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('cancel-res-shape');Ext.apply(this,{height:25,width:110,layout:'fit',html:'blort',resizable:false,closable:false,collapsible:false,draggable:false,tbar:[{text:'Cancel Area',iconCls:'cancel-draw',handler:this.cancelShape,scope:this}]});gwst.widgets.DrawToolWindow.superclass.initComponent.call(this);},cancelShape:function(){this.fireEvent('cancel-res-shape');}});Ext.reg('gwst-draw-tool-window',gwst.widgets.DrawToolWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ShapeAttribPanel=Ext.extend(gwst.widgets.WestPanel,{id:'shape-attrib-panel',shape_name:'unknown',initComponent:function(){this.addEvents('shape-attrib-cont');gwst.widgets.ShapeAttribPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_text_panel.getEl().update(this.getHtmlText());this.inner_form_panel.getForm().reset();},getHtmlText:function(){var html_text='<h2>Instructions</h2><p>Please provide more detailed boundary information for this '+this.shape_name+'.</p> <p>For example, your North boundary might be the mouth of the Nehalem River and your West boundary 30 fathoms.</p>';return html_text;},onRender:function(){this.inner_text_panel=new Ext.Panel({html:this.getHtmlText(),id:'shape_attrib_text_panel',style:'margin: 10px',border:false});this.add(this.inner_text_panel);this.notes_area=new Ext.form.TextArea({fieldLabel:'More Information',name:'note_text',autoHeight:false,height:120,width:155});this.inner_form_panel=new Ext.form.FormPanel({id:'shape_attrib_form_panel',style:'margin: 10px',border:false,url:'save-form.php',defaultType:'textfield',items:[{fieldLabel:'North Boundary',name:'boundary_n'},{fieldLabel:'East Boundary',name:'boundary_e'},{fieldLabel:'South Boundary',name:'boundary_s'},{fieldLabel:'West Boundary',name:'boundary_w'},this.notes_area]});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this)});this.add(this.inner_form_panel);this.add(this.button_panel);gwst.widgets.ShapeAttribPanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('shape-attrib-cont',this.inner_form_panel.getForm('shape_attrib_form_panel').getValues());}});Ext.reg('gwst-shape-attrib-panel',gwst.widgets.ShapeAttribPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ErrorWindow=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{title:'Error',layout:'fit',width:250,html:{tag:'div',id:'err_msg_panel',html:'Error'},height:180,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'OK',handler:this.okBtnClicked.createDelegate(this)}]});gwst.widgets.ErrorWindow.superclass.initComponent.call(this);},okBtnClicked:function(){this.hide();},load:function(msg){this.show();Ext.get('err_msg_panel').update(msg);}});Ext.reg('gwst-error-window',gwst.widgets.ErrorWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SpeciesSelect=Ext.extend(Ext.ux.Multiselect,{style:'margin:10px;margin-left:20px',width:250,height:150,valueField:"id",displayField:"name",allowBlank:false,ddReorder:false,xtype:'multiselect',fieldLabel:'Speciesselect<br />(Required)',name:'speciesselect',initComponent:function(){gwst.widgets.SpeciesSelect.superclass.initComponent.call(this);},onViewBeforeClick:function(vw,index,node,e){this.preClickSelections=this.view.getSelectedIndexes();if(this.disabled){return false;}
this.reset();}});Ext.reg('gwst-species-select',gwst.widgets.SpeciesSelect);Ext.namespace('gwst','gwst.widgets');gwst.widgets.FinishedResourceSelectedWindow=Ext.extend(Ext.Window,{res_group_name:'unknown',shape_name_plural:'unknown',cur_resource:'unknown',user_group_desc:'unknown',initComponent:function(){this.addEvents('edit-finished');Ext.apply(this,{layout:'fit',width:260,height:130,plain:true,bodyStyle:'padding: 8px',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'Yes',handler:this.yesBtnClicked.createDelegate(this)},{xtype:'tbseparator'},{text:'No',handler:this.noBtnClicked.createDelegate(this)}]});gwst.widgets.FinishedResourceSelectedWindow.superclass.initComponent.call(this);},getHtmlText:function(){var html_text='<p>You have already finished this '+this.res_group_name+'.</p> <p>Would you like to edit your '+this.user_group_desc+' '+this.shape_name_plural+' for '+this.cur_resource+'?</p>';return html_text;},updateWindow:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'finResSelWin_inner_panel',border:false});this.add(this.inner_panel);gwst.widgets.FinishedResourceSelectedWindow.superclass.onRender.apply(this,arguments);},yesBtnClicked:function(){this.fireEvent('edit-finished');},noBtnClicked:function(){this.hide();}});Ext.reg('gwst-finished-resource-selected-window',gwst.widgets.FinishedResourceSelectedWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SplashPanel=Ext.extend(gwst.widgets.WestPanel,{id:'splash-panel',user_group:'unknown',shape_name:'unknown',res_group_name:'unknown',initComponent:function(){gwst.widgets.SplashPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p>This is the drawing portion for the '+this.user_group+' user group.</p> <p>You will be able to come back and finish later if you need more time.</p> <p>To do so, click the \'Go To Main Menu\' button at the top left of the map screen.</p><img src="/site-media/images/go_to.png" style="margin-left: 65px">';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/0_Introduction_header.png">',id:'intro_header_panel',border:false,bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'intro_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.SplashPanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('splash-cont',this);}});Ext.reg('gwst-splash-panel',gwst.widgets.SplashPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.FinishPanel=Ext.extend(gwst.widgets.WestPanel,{id:'finish-panel',res_group_name:'unknown',shape_name:'unknown',user_group:'unknown',initComponent:function(){this.addEvents('select-another');this.addEvents('finish-map');gwst.widgets.FinishPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p>Current status for '+this.user_group+':</p><p>'+this.getCompletedResources()+this.getIncompleteResources()+'<p>';return html_text;},getCompletedResources:function(){var empty=true;var comp_res='<table class="resource-list"><tr><th><b>Completed '+capFirst(this.res_group_name)+':</b></th></tr>';for(var res=0;res<gwst.settings.resourceStore.getCount();res++){if(gwst.settings.resourceStore.getAt(res).get('finished')){empty=false;comp_res=comp_res+'<tr><td>'+gwst.settings.resourceStore.getAt(res).get('name')+'</td></tr>';}}
if(empty==true){comp_res=comp_res+'<tr><td>none</td></tr>';}
return comp_res+'</table>';},getIncompleteResources:function(){var empty=true;var incomp_res='<table class="resource-list"><tr><th><b>Incomplete '+capFirst(this.res_group_name)+':</b></th></tr>';for(var res=0;res<gwst.settings.resourceStore.getCount();res++){if(!gwst.settings.resourceStore.getAt(res).get('finished')){empty=false;incomp_res=incomp_res+'<tr><td>'+gwst.settings.resourceStore.getAt(res).get('name')+'</td></tr>';}}
if(empty==true){incomp_res=incomp_res+'<tr><td>none</td></tr>';}
return incomp_res+'</table>';},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'finish_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.CustomButtons({element_list:[{elem:this.selectBtnClicked.createDelegate(this),type:'handler'},{elem:'Select '+this.res_group_name+'',type:'text'},{elem:'Start your next '+this.res_group_name+' or change one you already completed',type:'text'},{elem:this.finishBtnClicked.createDelegate(this),type:'handler'},{elem:'Finish',type:'text'},{elem:'Finish the drawing section of the survey',type:'text'}]});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.FinishPanel.superclass.onRender.apply(this,arguments);},selectBtnClicked:function(){this.fireEvent('select-another',this);},finishBtnClicked:function(){this.fireEvent('finish-map',this);}});Ext.reg('gwst-finish-panel',gwst.widgets.FinishPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SplashWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('splash-finished');Ext.apply(this,{title:'Introduction',layout:'fit',modal:true,width:350,height:130,closeAction:'hide',closable:false,plain:true,bodyStyle:'padding: 10px',html:"<p>The drawing portion will now begin for the <u><i>"+gwst.settings.survey_group_name+"</i></u> user group.  You will have instructions every step of the way on the left hand side of the screen. You will also be able to come back and finish later if you need more time.",bbar:[{xtype:'tbfill',width:20},{text:'Begin',handler:this.finishSplash,iconCls:'begin-draw',iconAlign:'top',scope:this}]});gwst.widgets.SplashWindow.superclass.initComponent.call(this);},finishSplash:function(){this.fireEvent('splash-finished',this);}});Ext.reg('gwst-splash-window',gwst.widgets.SplashWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.InvalidShapePanel=Ext.extend(gwst.widgets.WestPanel,{id:'invalid-shape-panel',shape_name:'unknown',member_title:'unknown',resource:'unknown',status_code:null,shape_name_plural:'unknown',initComponent:function(){this.addEvents('okay-btn');gwst.widgets.InvalidShapePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config,status_code){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p class="error_text"><b>There was a problem</b> <img src="/site-media/images/exclamation.png"></p>';if(this.status_code==2){html_text+='<p>Your '+this.shape_name+' is not valid because it overlaps itself (example below).</p> <img class="invalid-image" src="/site-media/images/invalid_bowtie.gif">';}else if(this.status_code==3){html_text+='<p>Your '+this.shape_name+' falls completely outside the area of interest which is the Pacific Ocean off the Oregon Coast. Rivers and lakes are excluded from this survey.</p> <p>In the example below the '+this.shape_name+' falls within Woahink Lake which is not valid.  Any Oregon estuary, bay, or ocean would be.</p><img class="invalid-image" src="/site-media/images/invalid_bounds.gif">';}else if(this.status_code==4){html_text+='<p>Your new '+this.shape_name+' overlaps one of your other '+this.resource+' '+this.shape_name_plural+'. They are not allowed to do this.</p>  <p>If you have two that border each other, just draw the second one along the edge of the first as best as you can and tell us in your boundary notes that it should border the other. We will take care of the rest.</p><img class="invalid-image" src="/site-media/images/invalid_overlap.gif">';}else if(this.status_code==5){html_text+='<p>Your '+this.shape_name+' is not valid because it had less than 3 points.</p> <p>You probably accidentally double clicked and completed it before you were done.</p>';}else if(this.status_code==6){html_text+='<p>Your '+this.shape_name+' is not valid because it is too large. Please break it up into smaller '+this.shape_name_plural+'.</p>';}
html_text+='<p>Click the \'Continue\' button to try again.</p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'invalid_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this)});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.InvalidShapePanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('okay-btn',this);}});Ext.reg('gwst-invalid-shape-panel',gwst.widgets.InvalidShapePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.UnfinishedCheckWindow=Ext.extend(Ext.Window,{res_group_name:'unknown',shape_name_plural:'unknown',resource_id:'unknown',cur_resource:'unknown',user_group_desc:'unknown',initComponent:function(){this.addEvents('unfin-okay');Ext.apply(this,{layout:'fit',width:260,html:'<p>If you select another '+this.res_group_name+' now, you will <u><b>lose all of your '+this.user_group_desc+' '+this.shape_name_plural+' for '+this.cur_resource+'</b></u>.<br /><br />Are you sure you want to select another '+this.res_group_name+'?</p>',height:175,plain:true,bodyStyle:'padding: 8px',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'Yes',handler:this.yesBtnClicked.createDelegate(this)},{xtype:'tbseparator'},{text:'No',handler:this.noBtnClicked.createDelegate(this)}]});gwst.widgets.UnfinishedCheckWindow.superclass.initComponent.call(this);},yesBtnClicked:function(){this.fireEvent('unfin-okay');},noBtnClicked:function(){this.hide();}});Ext.reg('gwst-unfinished-check-window',gwst.widgets.UnfinishedCheckWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.UnfinishedResourceStartPanel=Ext.extend(gwst.widgets.WestPanel,{id:'unfinished-resource-start-panel',user_group:'unknown',shape_name_plural:'unknown',res_group_name:'unknown',cur_resource:'unknown',user_group_desc:'unknown',initComponent:function(){this.addEvents('unfin-res-start-skip');this.addEvents('unfin-res-start-cont');gwst.widgets.UnfinishedResourceStartPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<p class="top_instruct"><b>You did not finish drawing your '+this.user_group_desc+' '+this.cur_resource+' '+this.shape_name_plural+' during your last session.</b></p> <p><b>Please take the time to finish with this '+this.res_group_name+'.</b></p> <p>If you do not want to finish this '+this.res_group_name+' at this time, please use the \'Skip\' button below.</p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'intro_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.CustomButtons({element_list:[{elem:this.skipBtnClicked.createDelegate(this),type:'handler'},{elem:'Skip',type:'text'},{elem:this.contBtnClicked.createDelegate(this),type:'handler'},{elem:'Continue',type:'text'}]});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.UnfinishedResourceStartPanel.superclass.onRender.apply(this,arguments);},skipBtnClicked:function(){this.fireEvent('unfin-res-start-skip',this);},contBtnClicked:function(){this.fireEvent('unfin-res-start-cont',this);}});Ext.reg('gwst-unfinished-resource-start-panel',gwst.widgets.UnfinishedResourceStartPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.NavigatePanel=Ext.extend(gwst.widgets.WestPanel,{id:'navigate-panel',resource:'unknown',shape_name:'unknown',user_group:'unknown',help_url:gwst.settings.urls.nav_help,initComponent:function(){this.addEvents('nav-cont');this.addEvents('nav-back');gwst.widgets.NavigatePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2><p>First, navigate the map to the general area of your primary <i>'+this.resource+'</i> '+this.shape_name+' as a <i>'+this.user_group+'</i>.</p>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({html:'<img src="/site-media/images/2_Navigate_header.png">',id:'nav_header_panel',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'nav_inner_panel',style:'margin: 10px',border:false});this.table_panel=new Ext.Panel({layout:'table',border:false,style:'margin: 5px; padding: 5px',defaults:{bodyStyle:'border: none; padding: 5px'},layoutConfig:{columns:2},id:'nav_table_panel',items:[{html:'<p>a. To move the map, use the blue arrow buttons. To zoom the map in and out, use the blue \'+\' and \'-\' buttons. You may also use your keyboard\'s arrow keys and \'+\' and \'-\' keys.</p>'},{html:'<img src="/site-media/images/nav_2.png">'},{html:'<p>b. To turn on \'Nautical Charts\' use the selection window on the top right. Click the checkbox to turn them on or off.</p>'},{html:'<img src="/site-media/images/nav_1.png">'},{html:'<p>c. Get as close as you can to your '+this.shape_name+', then press the continue button.</p>'},{html:''}]});this.button_panel=new gwst.widgets.BackContButtons({cont_handler:this.contBtnClicked.createDelegate(this),back_handler:this.backBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.table_panel);this.add(this.button_panel);gwst.widgets.NavigatePanel.superclass.onRender.apply(this,arguments);},backBtnClicked:function(){this.fireEvent('nav-back',this);},contBtnClicked:function(){this.fireEvent('nav-cont',this,this.resource);}});Ext.reg('gwst-navigate-panel',gwst.widgets.NavigatePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.PennyWindow=Ext.extend(Ext.Window,{shape_name:'unknown',prev_pennies:null,rem_pennies:null,initComponent:function(){this.pennies_field=new Ext.form.NumberField({fieldLabel:'Pennies',id:'penny-window-numfield',name:'pennies',allowBlank:false,allowDecimals:false,width:100,minValue:1,minText:'Not Enough',maxValue:this.getMaxValue(),maxText:'Too Many',msgTarget:'under',selectOnFocus:true,xtype:'numberfield',enableKeyEvents:true});this.penny_form=new Ext.form.FormPanel({bodyStyle:'background-color: transparent',border:false,width:170,labelWidth:50,items:[this.pennies_field],id:'penny-window-form-panel',defaultType:'numberfield'});this.on('show',this.prepPennyForm);this.pennies_field.on('keypress',function(el,ev){if(ev.getKey()==ev.ENTER){this.saveBtnClicked();}},this);this.pennies_left_panel=new Ext.Panel({id:'penny-left-panel',html:this.getLabelValue()});var table_panel=new Ext.Panel({layout:'table',bodyStyle:'background-color: transparent',border:false,defaults:{bodyStyle:'border: none; padding: 5px; background-color: transparent'},layoutConfig:{columns:2},id:'penny_window_panel',items:[this.penny_form,this.pennies_left_panel]});Ext.apply(this,{title:'Enter a Penny Value',id:'penny-window',layout:'fit',x:9,y:130,width:280,height:160,bodyStyle:'padding: 10px',plain:true,closable:false,modal:true,resizable:false,closable:false,draggable:false,constrain:true,items:[table_panel],buttons:[{text:'Save',id:'saveButton',handler:this.saveBtnClicked.createDelegate(this)},{text:'Cancel',id:'cancelButton',handler:this.cancelBtnClicked.createDelegate(this)}]});gwst.widgets.PennyWindow.superclass.initComponent.call(this);},prepPennyForm:function(){this.pennies_field.setRawValue(null);this.pennies_field.reset();this.pennies_field.focus(true,true);},saveBtnClicked:function(){var penny_form=this.penny_form.getForm();if(penny_form.isValid()){var pennies_value=penny_form.getValues().pennies;this.fireEvent('penny-set',pennies_value);this.hide();}},cancelBtnClicked:function(){this.hide();},getMaxValue:function(){var maxValue=this.rem_pennies;if(this.prev_pennies){maxValue=this.prev_pennies+this.rem_pennies;}
return maxValue;},getLabelValue:function(){return'<span style="color:red">'+this.getMaxValue()+' available</span>';},load:function(config){this.rem_pennies=config.rem_pennies;this.prev_pennies=config.prev_pennies;this.pennies_left_panel.getEl().update(this.getLabelValue());this.pennies_field.maxValue=this.getMaxValue();}});Ext.reg('gwst-penny-window',gwst.widgets.PennyWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.YesNoButtons=Ext.extend(Ext.Panel,{yes_handler:null,yes_text:'unknown',no_handler:null,no_text:'unknown',initComponent:function(){Ext.apply(this,{style:'margin: 15px 35px; padding: 5px',cls:'gwst-button-panel',layout:'table',border:false,defaults:{bodyStyle:'border: none; padding: 10px'},layoutConfig:{columns:2}});gwst.widgets.YesNoButtons.superclass.initComponent.apply(this,arguments);},onRender:function(){var yes=new Ext.Action({text:'Yes',handler:this.yes_handler});var no=new Ext.Action({text:'No',handler:this.no_handler});this.add({items:[new Ext.Button(yes)],width:50,style:'margin-left: 55px'},{items:[new Ext.Button(no)],width:55});gwst.widgets.YesNoButtons.superclass.onRender.apply(this,arguments);}});Ext.reg('gwst-yes-no-buttons-panel',gwst.widgets.YesNoButtons);Ext.namespace('gwst','gwst.widgets');gwst.widgets.QuitCheckWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('main-menu');Ext.apply(this,{layout:'fit',width:250,html:'<p><b>Are you sure you want to quit and return to the main menu?</b><br /><br />Your progress will be saved.</p>',height:120,plain:true,bodyStyle:'padding: 8px',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'Yes',handler:this.yesBtnClicked.createDelegate(this)},{xtype:'tbseparator'},{text:'No',handler:this.noBtnClicked.createDelegate(this)}]});gwst.widgets.QuitCheckWindow.superclass.initComponent.call(this);},yesBtnClicked:function(){this.fireEvent('main-menu');},noBtnClicked:function(){this.hide();}});Ext.reg('gwst-quit-check-window',gwst.widgets.QuitCheckWindow);